-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGrammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	String -> L_quoted                                 (4)
	Program -> ListTopDef                              (5)
	TopDef -> RetVal Ident '(' ListArg ')' ';'         (6)
	TopDef -> RetVal Ident '(' ListArg ')' Block       (7)
	TopDef -> 'Glob' Type Ident '=' Expr ';'           (8)
	TopDef -> 'Gen' Type Ident '(' ListArg ')' Block   (9)
	ListTopDef ->                                      (10)
	ListTopDef -> TopDef ListTopDef                    (11)
	Arg -> Type Ident                                  (12)
	Arg -> 'list' Ident                                (13)
	ListArg ->                                         (14)
	ListArg -> Arg                                     (15)
	ListArg -> Arg ',' ListArg                         (16)
	Block -> '{' ListStmt '}'                          (17)
	ListStmt ->                                        (18)
	ListStmt -> Stmt ListStmt                          (19)
	Stmt -> ';'                                        (20)
	Stmt -> Block                                      (21)
	Stmt -> Type Ident '=' Expr ';'                    (22)
	Stmt -> Ident '=' Expr ';'                         (23)
	Stmt -> Ident '++' ';'                             (24)
	Stmt -> Ident '--' ';'                             (25)
	Stmt -> 'break' ';'                                (26)
	Stmt -> 'continue' ';'                             (27)
	Stmt -> 'if' '(' Expr ')' Block                    (28)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (29)
	Stmt -> 'while' '(' Expr ')' Block                 (30)
	Stmt -> 'return' '(' Expr ')'                      (31)
	Stmt -> 'yield' '(' Expr ')'                       (32)
	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg ')' ';'   (33)
	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block   (34)
	Stmt -> 'list' Ident '=' '[' ListExpr ']' ';'      (35)
	Stmt -> Ident '.push' '(' Expr ')' ';'             (36)
	Stmt -> Ident '.pop' ';'                           (37)
	Stmt -> Ident '.add' '(' Expr ').(' Expr ')' ';'   (38)
	Stmt -> Ident '.remove' '(' Expr ')' ';'           (39)
	Stmt -> Expr ';'                                   (40)
	Type -> 'int'                                      (41)
	Type -> 'char'                                     (42)
	Type -> 'string'                                   (43)
	Type -> 'bool'                                     (44)
	RetVal -> Type                                     (45)
	RetVal -> 'Proc'                                   (46)
	Var -> Ident                                       (47)
	Expr7 -> Ident '[' Expr ']'                        (48)
	Expr7 -> Var                                       (49)
	Expr7 -> ELit                                      (50)
	Expr7 -> Ident '(' ListFunArg ')'                  (51)
	Expr7 -> '(' Expr ')'                              (52)
	ELit -> Integer                                    (53)
	ELit -> EBool                                      (54)
	ELit -> String                                     (55)
	ELit -> Char                                       (56)
	EBool -> 'true'                                    (57)
	EBool -> 'false'                                   (58)
	FunArg -> Expr                                     (59)
	FunArg -> '&' Var                                  (60)
	ListFunArg ->                                      (61)
	ListFunArg -> FunArg                               (62)
	ListFunArg -> FunArg ',' ListFunArg                (63)
	Expr6 -> '-' Expr7                                 (64)
	Expr6 -> '!' Expr7                                 (65)
	Expr6 -> '(' Type ')' Expr6                        (66)
	Expr6 -> 'next' '(' Ident ')'                      (67)
	Expr6 -> Expr7                                     (68)
	Expr5 -> Expr5 MulOp Expr6                         (69)
	Expr5 -> Expr6                                     (70)
	Expr4 -> Expr4 AddOp Expr5                         (71)
	Expr4 -> Expr5                                     (72)
	Expr3 -> Expr3 RelOp Expr4                         (73)
	Expr3 -> Expr4                                     (74)
	Expr2 -> Expr3 '&&' Expr2                          (75)
	Expr2 -> Expr3                                     (76)
	Expr1 -> Expr2 '||' Expr1                          (77)
	Expr1 -> Expr2                                     (78)
	Expr -> Expr1                                      (79)
	ListExpr ->                                        (80)
	ListExpr -> Expr                                   (81)
	ListExpr -> Expr ',' ListExpr                      (82)
	AddOp -> '+'                                       (83)
	AddOp -> '-'                                       (84)
	MulOp -> '*'                                       (85)
	MulOp -> '/'                                       (86)
	MulOp -> '%'                                       (87)
	RelOp -> '<'                                       (88)
	RelOp -> '<='                                      (89)
	RelOp -> '>'                                       (90)
	RelOp -> '>='                                      (91)
	RelOp -> '=='                                      (92)
	RelOp -> '!='                                      (93)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	').('          { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'+'            { PT _ (TS _ 10) }
	'++'           { PT _ (TS _ 11) }
	','            { PT _ (TS _ 12) }
	'-'            { PT _ (TS _ 13) }
	'--'           { PT _ (TS _ 14) }
	'.add'         { PT _ (TS _ 15) }
	'.pop'         { PT _ (TS _ 16) }
	'.push'        { PT _ (TS _ 17) }
	'.remove'      { PT _ (TS _ 18) }
	'/'            { PT _ (TS _ 19) }
	';'            { PT _ (TS _ 20) }
	'<'            { PT _ (TS _ 21) }
	'<='           { PT _ (TS _ 22) }
	'='            { PT _ (TS _ 23) }
	'=='           { PT _ (TS _ 24) }
	'>'            { PT _ (TS _ 25) }
	'>='           { PT _ (TS _ 26) }
	'Gen'          { PT _ (TS _ 27) }
	'Glob'         { PT _ (TS _ 28) }
	'Proc'         { PT _ (TS _ 29) }
	'['            { PT _ (TS _ 30) }
	']'            { PT _ (TS _ 31) }
	'bool'         { PT _ (TS _ 32) }
	'break'        { PT _ (TS _ 33) }
	'char'         { PT _ (TS _ 34) }
	'continue'     { PT _ (TS _ 35) }
	'else'         { PT _ (TS _ 36) }
	'false'        { PT _ (TS _ 37) }
	'for'          { PT _ (TS _ 38) }
	'gen'          { PT _ (TS _ 39) }
	'if'           { PT _ (TS _ 40) }
	'in'           { PT _ (TS _ 41) }
	'int'          { PT _ (TS _ 42) }
	'list'         { PT _ (TS _ 43) }
	'next'         { PT _ (TS _ 44) }
	'return'       { PT _ (TS _ 45) }
	'string'       { PT _ (TS _ 46) }
	'true'         { PT _ (TS _ 47) }
	'while'        { PT _ (TS _ 48) }
	'yield'        { PT _ (TS _ 49) }
	'{'            { PT _ (TS _ 50) }
	'||'           { PT _ (TS _ 51) }
	'}'            { PT _ (TS _ 52) }
	L_Ident        { PT _ (TV _) }
	L_charac       { PT _ (TC _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	String          rule  4
	Program         rule  5
	TopDef          rules 6, 7, 8, 9
	ListTopDef      rules 10, 11
	Arg             rules 12, 13
	ListArg         rules 14, 15, 16
	Block           rule  17
	ListStmt        rules 18, 19
	Stmt            rules 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
	Type            rules 41, 42, 43, 44
	RetVal          rules 45, 46
	Var             rule  47
	Expr7           rules 48, 49, 50, 51, 52
	ELit            rules 53, 54, 55, 56
	EBool           rules 57, 58
	FunArg          rules 59, 60
	ListFunArg      rules 61, 62, 63
	Expr6           rules 64, 65, 66, 67, 68
	Expr5           rules 69, 70
	Expr4           rules 71, 72
	Expr3           rules 73, 74
	Expr2           rules 75, 76
	Expr1           rules 77, 78
	Expr            rule  79
	ListExpr        rules 80, 81, 82
	AddOp           rules 83, 84
	MulOp           rules 85, 86, 87
	RelOp           rules 88, 89, 90, 91, 92, 93

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'Gen'          shift, and enter state 8
	'Glob'         shift, and enter state 9
	'Proc'         shift, and enter state 10
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14
	%eof           reduce using rule 10

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6
	RetVal         goto state 7

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	').('          reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.add'         reduce using rule 1
	'.pop'         reduce using rule 1
	'.push'        reduce using rule 1
	'.remove'      reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'in'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef . ListTopDef                   (rule 11)

	'Gen'          shift, and enter state 8
	'Glob'         shift, and enter state 9
	'Proc'         shift, and enter state 10
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14
	%eof           reduce using rule 10

	TopDef         goto state 4
	ListTopDef     goto state 18
	Type           goto state 6
	RetVal         goto state 7

State 5

	Program -> ListTopDef .                             (rule 5)

	%eof           reduce using rule 5


State 6

	RetVal -> Type .                                    (rule 45)

	L_Ident        reduce using rule 45


State 7

	TopDef -> RetVal . Ident '(' ListArg ')' ';'        (rule 6)
	TopDef -> RetVal . Ident '(' ListArg ')' Block      (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 8

	TopDef -> 'Gen' . Type Ident '(' ListArg ')' Block    (rule 9)

	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Type           goto state 16

State 9

	TopDef -> 'Glob' . Type Ident '=' Expr ';'          (rule 8)

	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Type           goto state 15

State 10

	RetVal -> 'Proc' .                                  (rule 46)

	L_Ident        reduce using rule 46


State 11

	Type -> 'bool' .                                    (rule 44)

	')'            reduce using rule 44
	L_Ident        reduce using rule 44


State 12

	Type -> 'char' .                                    (rule 42)

	')'            reduce using rule 42
	L_Ident        reduce using rule 42


State 13

	Type -> 'int' .                                     (rule 41)

	')'            reduce using rule 41
	L_Ident        reduce using rule 41


State 14

	Type -> 'string' .                                  (rule 43)

	')'            reduce using rule 43
	L_Ident        reduce using rule 43


State 15

	TopDef -> 'Glob' Type . Ident '=' Expr ';'          (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 21

State 16

	TopDef -> 'Gen' Type . Ident '(' ListArg ')' Block    (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 20

State 17

	TopDef -> RetVal Ident . '(' ListArg ')' ';'        (rule 6)
	TopDef -> RetVal Ident . '(' ListArg ')' Block      (rule 7)

	'('            shift, and enter state 19


State 18

	ListTopDef -> TopDef ListTopDef .                   (rule 11)

	%eof           reduce using rule 11


State 19

	TopDef -> RetVal Ident '(' . ListArg ')' ';'        (rule 6)
	TopDef -> RetVal Ident '(' . ListArg ')' Block      (rule 7)

	')'            reduce using rule 14
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'list'         shift, and enter state 27
	'string'       shift, and enter state 14

	Arg            goto state 24
	ListArg        goto state 25
	Type           goto state 26

State 20

	TopDef -> 'Gen' Type Ident . '(' ListArg ')' Block    (rule 9)

	'('            shift, and enter state 23


State 21

	TopDef -> 'Glob' Type Ident . '=' Expr ';'          (rule 8)

	'='            shift, and enter state 22


State 22

	TopDef -> 'Glob' Type Ident '=' . Expr ';'          (rule 8)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 47

State 23

	TopDef -> 'Gen' Type Ident '(' . ListArg ')' Block    (rule 9)

	')'            reduce using rule 14
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'list'         shift, and enter state 27
	'string'       shift, and enter state 14

	Arg            goto state 24
	ListArg        goto state 32
	Type           goto state 26

State 24

	ListArg -> Arg .                                    (rule 15)
	ListArg -> Arg . ',' ListArg                        (rule 16)

	')'            reduce using rule 15
	','            shift, and enter state 31


State 25

	TopDef -> RetVal Ident '(' ListArg . ')' ';'        (rule 6)
	TopDef -> RetVal Ident '(' ListArg . ')' Block      (rule 7)

	')'            shift, and enter state 30


State 26

	Arg -> Type . Ident                                 (rule 12)

	L_Ident        shift, and enter state 2

	Ident          goto state 29

State 27

	Arg -> 'list' . Ident                               (rule 13)

	L_Ident        shift, and enter state 2

	Ident          goto state 28

State 28

	Arg -> 'list' Ident .                               (rule 13)

	')'            reduce using rule 13
	','            reduce using rule 13


State 29

	Arg -> Type Ident .                                 (rule 12)

	')'            reduce using rule 12
	','            reduce using rule 12


State 30

	TopDef -> RetVal Ident '(' ListArg ')' . ';'        (rule 6)
	TopDef -> RetVal Ident '(' ListArg ')' . Block      (rule 7)

	';'            shift, and enter state 85
	'{'            shift, and enter state 86

	Block          goto state 84

State 31

	ListArg -> Arg ',' . ListArg                        (rule 16)

	')'            reduce using rule 14
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'list'         shift, and enter state 27
	'string'       shift, and enter state 14

	Arg            goto state 24
	ListArg        goto state 83
	Type           goto state 26

State 32

	TopDef -> 'Gen' Type Ident '(' ListArg . ')' Block    (rule 9)

	')'            shift, and enter state 82


State 33

	Var -> Ident .                                      (rule 47)
	Expr7 -> Ident . '[' Expr ']'                       (rule 48)
	Expr7 -> Ident . '(' ListFunArg ')'                 (rule 51)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 80
	')'            reduce using rule 47
	').('          reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            shift, and enter state 81
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 34

	ELit -> Char .                                      (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	').('          reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 35

	ELit -> Integer .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	').('          reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 36

	ELit -> String .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	').('          reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 37

	Expr7 -> Var .                                      (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	').('          reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 38

	Expr6 -> Expr7 .                                    (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	').('          reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68


State 39

	Expr7 -> ELit .                                     (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	').('          reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 40

	ELit -> EBool .                                     (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	').('          reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 41

	Expr5 -> Expr6 .                                    (rule 70)

	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	').('          reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70


State 42

	Expr5 -> Expr5 . MulOp Expr6                        (rule 69)
	Expr4 -> Expr5 .                                    (rule 72)

	'!='           reduce using rule 72
	'%'            shift, and enter state 77
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	').('          reduce using rule 72
	'*'            shift, and enter state 78
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'/'            shift, and enter state 79
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'||'           reduce using rule 72

	MulOp          goto state 76

State 43

	Expr4 -> Expr4 . AddOp Expr5                        (rule 71)
	Expr3 -> Expr4 .                                    (rule 74)

	'!='           reduce using rule 74
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	').('          reduce using rule 74
	'+'            shift, and enter state 74
	','            reduce using rule 74
	'-'            shift, and enter state 75
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	']'            reduce using rule 74
	'||'           reduce using rule 74

	AddOp          goto state 73

State 44

	Expr3 -> Expr3 . RelOp Expr4                        (rule 73)
	Expr2 -> Expr3 . '&&' Expr2                         (rule 75)
	Expr2 -> Expr3 .                                    (rule 76)

	'!='           shift, and enter state 66
	'&&'           shift, and enter state 67
	')'            reduce using rule 76
	').('          reduce using rule 76
	','            reduce using rule 76
	';'            reduce using rule 76
	'<'            shift, and enter state 68
	'<='           shift, and enter state 69
	'=='           shift, and enter state 70
	'>'            shift, and enter state 71
	'>='           shift, and enter state 72
	']'            reduce using rule 76
	'||'           reduce using rule 76

	RelOp          goto state 65

State 45

	Expr1 -> Expr2 . '||' Expr1                         (rule 77)
	Expr1 -> Expr2 .                                    (rule 78)

	')'            reduce using rule 78
	').('          reduce using rule 78
	','            reduce using rule 78
	';'            reduce using rule 78
	']'            reduce using rule 78
	'||'           shift, and enter state 64


State 46

	Expr -> Expr1 .                                     (rule 79)

	')'            reduce using rule 79
	').('          reduce using rule 79
	','            reduce using rule 79
	';'            reduce using rule 79
	']'            reduce using rule 79


State 47

	TopDef -> 'Glob' Type Ident '=' Expr . ';'          (rule 8)

	';'            shift, and enter state 63


State 48

	Expr6 -> '!' . Expr7                                (rule 65)

	'('            shift, and enter state 59
	'false'        shift, and enter state 51
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 62
	ELit           goto state 39
	EBool          goto state 40

State 49

	Expr7 -> '(' . Expr ')'                             (rule 52)
	Expr6 -> '(' . Type ')' Expr6                       (rule 66)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'false'        shift, and enter state 51
	'int'          shift, and enter state 13
	'next'         shift, and enter state 52
	'string'       shift, and enter state 14
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Type           goto state 60
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 61

State 50

	Expr6 -> '-' . Expr7                                (rule 64)

	'('            shift, and enter state 59
	'false'        shift, and enter state 51
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 58
	ELit           goto state 39
	EBool          goto state 40

State 51

	EBool -> 'false' .                                  (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	').('          reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 52

	Expr6 -> 'next' . '(' Ident ')'                     (rule 67)

	'('            shift, and enter state 57


State 53

	EBool -> 'true' .                                   (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	').('          reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 54

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	').('          reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 55

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	').('          reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 56

	String -> L_quoted .                                (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	').('          reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	']'            reduce using rule 4
	'||'           reduce using rule 4


State 57

	Expr6 -> 'next' '(' . Ident ')'                     (rule 67)

	L_Ident        shift, and enter state 2

	Ident          goto state 116

State 58

	Expr6 -> '-' Expr7 .                                (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	').('          reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 59

	Expr7 -> '(' . Expr ')'                             (rule 52)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 61

State 60

	Expr6 -> '(' Type . ')' Expr6                       (rule 66)

	')'            shift, and enter state 115


State 61

	Expr7 -> '(' Expr . ')'                             (rule 52)

	')'            shift, and enter state 114


State 62

	Expr6 -> '!' Expr7 .                                (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	').('          reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 63

	TopDef -> 'Glob' Type Ident '=' Expr ';' .          (rule 8)

	'Gen'          reduce using rule 8
	'Glob'         reduce using rule 8
	'Proc'         reduce using rule 8
	'bool'         reduce using rule 8
	'char'         reduce using rule 8
	'int'          reduce using rule 8
	'string'       reduce using rule 8
	%eof           reduce using rule 8


State 64

	Expr1 -> Expr2 '||' . Expr1                         (rule 77)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 113

State 65

	Expr3 -> Expr3 RelOp . Expr4                        (rule 73)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 112

State 66

	RelOp -> '!=' .                                     (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'-'            reduce using rule 93
	'false'        reduce using rule 93
	'next'         reduce using rule 93
	'true'         reduce using rule 93
	L_Ident        reduce using rule 93
	L_charac       reduce using rule 93
	L_integ        reduce using rule 93
	L_quoted       reduce using rule 93


State 67

	Expr2 -> Expr3 '&&' . Expr2                         (rule 75)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 111

State 68

	RelOp -> '<' .                                      (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'next'         reduce using rule 88
	'true'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_charac       reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 69

	RelOp -> '<=' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'next'         reduce using rule 89
	'true'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_charac       reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 70

	RelOp -> '==' .                                     (rule 92)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'-'            reduce using rule 92
	'false'        reduce using rule 92
	'next'         reduce using rule 92
	'true'         reduce using rule 92
	L_Ident        reduce using rule 92
	L_charac       reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92


State 71

	RelOp -> '>' .                                      (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'next'         reduce using rule 90
	'true'         reduce using rule 90
	L_Ident        reduce using rule 90
	L_charac       reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 72

	RelOp -> '>=' .                                     (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'-'            reduce using rule 91
	'false'        reduce using rule 91
	'next'         reduce using rule 91
	'true'         reduce using rule 91
	L_Ident        reduce using rule 91
	L_charac       reduce using rule 91
	L_integ        reduce using rule 91
	L_quoted       reduce using rule 91


State 73

	Expr4 -> Expr4 AddOp . Expr5                        (rule 71)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 110

State 74

	AddOp -> '+' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'next'         reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_charac       reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 75

	AddOp -> '-' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'next'         reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_charac       reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 76

	Expr5 -> Expr5 MulOp . Expr6                        (rule 69)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 109

State 77

	MulOp -> '%' .                                      (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'next'         reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_charac       reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 78

	MulOp -> '*' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'next'         reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_charac       reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 79

	MulOp -> '/' .                                      (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'next'         reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_charac       reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 80

	Expr7 -> Ident '(' . ListFunArg ')'                 (rule 51)

	'!'            shift, and enter state 48
	'&'            shift, and enter state 108
	'('            shift, and enter state 49
	')'            reduce using rule 61
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	FunArg         goto state 105
	ListFunArg     goto state 106
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 107

State 81

	Expr7 -> Ident '[' . Expr ']'                       (rule 48)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 104

State 82

	TopDef -> 'Gen' Type Ident '(' ListArg ')' . Block    (rule 9)

	'{'            shift, and enter state 86

	Block          goto state 103

State 83

	ListArg -> Arg ',' ListArg .                        (rule 16)

	')'            reduce using rule 16


State 84

	TopDef -> RetVal Ident '(' ListArg ')' Block .      (rule 7)

	'Gen'          reduce using rule 7
	'Glob'         reduce using rule 7
	'Proc'         reduce using rule 7
	'bool'         reduce using rule 7
	'char'         reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	%eof           reduce using rule 7


State 85

	TopDef -> RetVal Ident '(' ListArg ')' ';' .        (rule 6)

	'Gen'          reduce using rule 6
	'Glob'         reduce using rule 6
	'Proc'         reduce using rule 6
	'bool'         reduce using rule 6
	'char'         reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	%eof           reduce using rule 6


State 86

	Block -> '{' . ListStmt '}'                         (rule 17)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	';'            shift, and enter state 93
	'bool'         shift, and enter state 11
	'break'        shift, and enter state 94
	'char'         shift, and enter state 12
	'continue'     shift, and enter state 95
	'false'        shift, and enter state 51
	'for'          shift, and enter state 96
	'gen'          shift, and enter state 97
	'if'           shift, and enter state 98
	'int'          shift, and enter state 13
	'list'         shift, and enter state 99
	'next'         shift, and enter state 52
	'return'       shift, and enter state 100
	'string'       shift, and enter state 14
	'true'         shift, and enter state 53
	'while'        shift, and enter state 101
	'yield'        shift, and enter state 102
	'{'            shift, and enter state 86
	'}'            reduce using rule 18
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 87
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Block          goto state 88
	ListStmt       goto state 89
	Stmt           goto state 90
	Type           goto state 91
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 92

State 87

	Stmt -> Ident . '=' Expr ';'                        (rule 23)
	Stmt -> Ident . '++' ';'                            (rule 24)
	Stmt -> Ident . '--' ';'                            (rule 25)
	Stmt -> Ident . '.push' '(' Expr ')' ';'            (rule 36)
	Stmt -> Ident . '.pop' ';'                          (rule 37)
	Stmt -> Ident . '.add' '(' Expr ').(' Expr ')' ';'    (rule 38)
	Stmt -> Ident . '.remove' '(' Expr ')' ';'          (rule 39)
	Var -> Ident .                                      (rule 47)
	Expr7 -> Ident . '[' Expr ']'                       (rule 48)
	Expr7 -> Ident . '(' ListFunArg ')'                 (rule 51)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 80
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           shift, and enter state 137
	'-'            reduce using rule 47
	'--'           shift, and enter state 138
	'.add'         shift, and enter state 139
	'.pop'         shift, and enter state 140
	'.push'        shift, and enter state 141
	'.remove'      shift, and enter state 142
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            shift, and enter state 143
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            shift, and enter state 81
	'||'           reduce using rule 47


State 88

	Stmt -> Block .                                     (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'char'         reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'gen'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'list'         reduce using rule 21
	'next'         reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'yield'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_charac       reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 89

	Block -> '{' ListStmt . '}'                         (rule 17)

	'}'            shift, and enter state 136


State 90

	ListStmt -> Stmt . ListStmt                         (rule 19)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	';'            shift, and enter state 93
	'bool'         shift, and enter state 11
	'break'        shift, and enter state 94
	'char'         shift, and enter state 12
	'continue'     shift, and enter state 95
	'false'        shift, and enter state 51
	'for'          shift, and enter state 96
	'gen'          shift, and enter state 97
	'if'           shift, and enter state 98
	'int'          shift, and enter state 13
	'list'         shift, and enter state 99
	'next'         shift, and enter state 52
	'return'       shift, and enter state 100
	'string'       shift, and enter state 14
	'true'         shift, and enter state 53
	'while'        shift, and enter state 101
	'yield'        shift, and enter state 102
	'{'            shift, and enter state 86
	'}'            reduce using rule 18
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 87
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Block          goto state 88
	ListStmt       goto state 135
	Stmt           goto state 90
	Type           goto state 91
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 92

State 91

	Stmt -> Type . Ident '=' Expr ';'                   (rule 22)

	L_Ident        shift, and enter state 2

	Ident          goto state 134

State 92

	Stmt -> Expr . ';'                                  (rule 40)

	';'            shift, and enter state 133


State 93

	Stmt -> ';' .                                       (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'char'         reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'gen'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'list'         reduce using rule 20
	'next'         reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'yield'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_charac       reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 94

	Stmt -> 'break' . ';'                               (rule 26)

	';'            shift, and enter state 132


State 95

	Stmt -> 'continue' . ';'                            (rule 27)

	';'            shift, and enter state 131


State 96

	Stmt -> 'for' . '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block    (rule 34)

	'('            shift, and enter state 130


State 97

	Stmt -> 'gen' . Ident '=' Ident '(' ListFunArg ')' ';'    (rule 33)

	L_Ident        shift, and enter state 2

	Ident          goto state 129

State 98

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 28)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 29)

	'('            shift, and enter state 128


State 99

	Stmt -> 'list' . Ident '=' '[' ListExpr ']' ';'     (rule 35)

	L_Ident        shift, and enter state 2

	Ident          goto state 127

State 100

	Stmt -> 'return' . '(' Expr ')'                     (rule 31)

	'('            shift, and enter state 126


State 101

	Stmt -> 'while' . '(' Expr ')' Block                (rule 30)

	'('            shift, and enter state 125


State 102

	Stmt -> 'yield' . '(' Expr ')'                      (rule 32)

	'('            shift, and enter state 124


State 103

	TopDef -> 'Gen' Type Ident '(' ListArg ')' Block .    (rule 9)

	'Gen'          reduce using rule 9
	'Glob'         reduce using rule 9
	'Proc'         reduce using rule 9
	'bool'         reduce using rule 9
	'char'         reduce using rule 9
	'int'          reduce using rule 9
	'string'       reduce using rule 9
	%eof           reduce using rule 9


State 104

	Expr7 -> Ident '[' Expr . ']'                       (rule 48)

	']'            shift, and enter state 123


State 105

	ListFunArg -> FunArg .                              (rule 62)
	ListFunArg -> FunArg . ',' ListFunArg               (rule 63)

	')'            reduce using rule 62
	','            shift, and enter state 122


State 106

	Expr7 -> Ident '(' ListFunArg . ')'                 (rule 51)

	')'            shift, and enter state 121


State 107

	FunArg -> Expr .                                    (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59


State 108

	FunArg -> '&' . Var                                 (rule 60)

	L_Ident        shift, and enter state 2

	Ident          goto state 119
	Var            goto state 120

State 109

	Expr5 -> Expr5 MulOp Expr6 .                        (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	').('          reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69


State 110

	Expr5 -> Expr5 . MulOp Expr6                        (rule 69)
	Expr4 -> Expr4 AddOp Expr5 .                        (rule 71)

	'!='           reduce using rule 71
	'%'            shift, and enter state 77
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	').('          reduce using rule 71
	'*'            shift, and enter state 78
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'/'            shift, and enter state 79
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71

	MulOp          goto state 76

State 111

	Expr2 -> Expr3 '&&' Expr2 .                         (rule 75)

	')'            reduce using rule 75
	').('          reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75
	']'            reduce using rule 75
	'||'           reduce using rule 75


State 112

	Expr4 -> Expr4 . AddOp Expr5                        (rule 71)
	Expr3 -> Expr3 RelOp Expr4 .                        (rule 73)

	'!='           reduce using rule 73
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	').('          reduce using rule 73
	'+'            shift, and enter state 74
	','            reduce using rule 73
	'-'            shift, and enter state 75
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	']'            reduce using rule 73
	'||'           reduce using rule 73

	AddOp          goto state 73

State 113

	Expr1 -> Expr2 '||' Expr1 .                         (rule 77)

	')'            reduce using rule 77
	').('          reduce using rule 77
	','            reduce using rule 77
	';'            reduce using rule 77
	']'            reduce using rule 77


State 114

	Expr7 -> '(' Expr ')' .                             (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	').('          reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 115

	Expr6 -> '(' Type ')' . Expr6                       (rule 66)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 118

State 116

	Expr6 -> 'next' '(' Ident . ')'                     (rule 67)

	')'            shift, and enter state 117


State 117

	Expr6 -> 'next' '(' Ident ')' .                     (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	').('          reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67


State 118

	Expr6 -> '(' Type ')' Expr6 .                       (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	').('          reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 119

	Var -> Ident .                                      (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47


State 120

	FunArg -> '&' Var .                                 (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60


State 121

	Expr7 -> Ident '(' ListFunArg ')' .                 (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	').('          reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 122

	ListFunArg -> FunArg ',' . ListFunArg               (rule 63)

	'!'            shift, and enter state 48
	'&'            shift, and enter state 108
	'('            shift, and enter state 49
	')'            reduce using rule 61
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	FunArg         goto state 105
	ListFunArg     goto state 159
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 107

State 123

	Expr7 -> Ident '[' Expr ']' .                       (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	').('          reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 124

	Stmt -> 'yield' '(' . Expr ')'                      (rule 32)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 158

State 125

	Stmt -> 'while' '(' . Expr ')' Block                (rule 30)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 157

State 126

	Stmt -> 'return' '(' . Expr ')'                     (rule 31)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 156

State 127

	Stmt -> 'list' Ident . '=' '[' ListExpr ']' ';'     (rule 35)

	'='            shift, and enter state 155


State 128

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 28)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 29)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 154

State 129

	Stmt -> 'gen' Ident . '=' Ident '(' ListFunArg ')' ';'    (rule 33)

	'='            shift, and enter state 153


State 130

	Stmt -> 'for' '(' . Ident 'in' Ident '(' ListFunArg ')' ')' Block    (rule 34)

	L_Ident        shift, and enter state 2

	Ident          goto state 152

State 131

	Stmt -> 'continue' ';' .                            (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'char'         reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'gen'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'list'         reduce using rule 27
	'next'         reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'yield'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_charac       reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 132

	Stmt -> 'break' ';' .                               (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'char'         reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'gen'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'list'         reduce using rule 26
	'next'         reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'yield'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_charac       reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 133

	Stmt -> Expr ';' .                                  (rule 40)

	'!'            reduce using rule 40
	'('            reduce using rule 40
	'-'            reduce using rule 40
	';'            reduce using rule 40
	'bool'         reduce using rule 40
	'break'        reduce using rule 40
	'char'         reduce using rule 40
	'continue'     reduce using rule 40
	'false'        reduce using rule 40
	'for'          reduce using rule 40
	'gen'          reduce using rule 40
	'if'           reduce using rule 40
	'int'          reduce using rule 40
	'list'         reduce using rule 40
	'next'         reduce using rule 40
	'return'       reduce using rule 40
	'string'       reduce using rule 40
	'true'         reduce using rule 40
	'while'        reduce using rule 40
	'yield'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_Ident        reduce using rule 40
	L_charac       reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40


State 134

	Stmt -> Type Ident . '=' Expr ';'                   (rule 22)

	'='            shift, and enter state 151


State 135

	ListStmt -> Stmt ListStmt .                         (rule 19)

	'}'            reduce using rule 19


State 136

	Block -> '{' ListStmt '}' .                         (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'Gen'          reduce using rule 17
	'Glob'         reduce using rule 17
	'Proc'         reduce using rule 17
	'bool'         reduce using rule 17
	'break'        reduce using rule 17
	'char'         reduce using rule 17
	'continue'     reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'gen'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'list'         reduce using rule 17
	'next'         reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'yield'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_charac       reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 137

	Stmt -> Ident '++' . ';'                            (rule 24)

	';'            shift, and enter state 150


State 138

	Stmt -> Ident '--' . ';'                            (rule 25)

	';'            shift, and enter state 149


State 139

	Stmt -> Ident '.add' . '(' Expr ').(' Expr ')' ';'    (rule 38)

	'('            shift, and enter state 148


State 140

	Stmt -> Ident '.pop' . ';'                          (rule 37)

	';'            shift, and enter state 147


State 141

	Stmt -> Ident '.push' . '(' Expr ')' ';'            (rule 36)

	'('            shift, and enter state 146


State 142

	Stmt -> Ident '.remove' . '(' Expr ')' ';'          (rule 39)

	'('            shift, and enter state 145


State 143

	Stmt -> Ident '=' . Expr ';'                        (rule 23)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 144

State 144

	Stmt -> Ident '=' Expr . ';'                        (rule 23)

	';'            shift, and enter state 171


State 145

	Stmt -> Ident '.remove' '(' . Expr ')' ';'          (rule 39)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 170

State 146

	Stmt -> Ident '.push' '(' . Expr ')' ';'            (rule 36)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 169

State 147

	Stmt -> Ident '.pop' ';' .                          (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	';'            reduce using rule 37
	'bool'         reduce using rule 37
	'break'        reduce using rule 37
	'char'         reduce using rule 37
	'continue'     reduce using rule 37
	'false'        reduce using rule 37
	'for'          reduce using rule 37
	'gen'          reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'list'         reduce using rule 37
	'next'         reduce using rule 37
	'return'       reduce using rule 37
	'string'       reduce using rule 37
	'true'         reduce using rule 37
	'while'        reduce using rule 37
	'yield'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_Ident        reduce using rule 37
	L_charac       reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37


State 148

	Stmt -> Ident '.add' '(' . Expr ').(' Expr ')' ';'    (rule 38)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 168

State 149

	Stmt -> Ident '--' ';' .                            (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'char'         reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'gen'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'list'         reduce using rule 25
	'next'         reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'yield'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_charac       reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 150

	Stmt -> Ident '++' ';' .                            (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'char'         reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'gen'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'list'         reduce using rule 24
	'next'         reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'yield'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_charac       reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 151

	Stmt -> Type Ident '=' . Expr ';'                   (rule 22)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 167

State 152

	Stmt -> 'for' '(' Ident . 'in' Ident '(' ListFunArg ')' ')' Block    (rule 34)

	'in'           shift, and enter state 166


State 153

	Stmt -> 'gen' Ident '=' . Ident '(' ListFunArg ')' ';'    (rule 33)

	L_Ident        shift, and enter state 2

	Ident          goto state 165

State 154

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 28)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 29)

	')'            shift, and enter state 164


State 155

	Stmt -> 'list' Ident '=' . '[' ListExpr ']' ';'     (rule 35)

	'['            shift, and enter state 163


State 156

	Stmt -> 'return' '(' Expr . ')'                     (rule 31)

	')'            shift, and enter state 162


State 157

	Stmt -> 'while' '(' Expr . ')' Block                (rule 30)

	')'            shift, and enter state 161


State 158

	Stmt -> 'yield' '(' Expr . ')'                      (rule 32)

	')'            shift, and enter state 160


State 159

	ListFunArg -> FunArg ',' ListFunArg .               (rule 63)

	')'            reduce using rule 63


State 160

	Stmt -> 'yield' '(' Expr ')' .                      (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'bool'         reduce using rule 32
	'break'        reduce using rule 32
	'char'         reduce using rule 32
	'continue'     reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'gen'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'list'         reduce using rule 32
	'next'         reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'while'        reduce using rule 32
	'yield'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_charac       reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 161

	Stmt -> 'while' '(' Expr ')' . Block                (rule 30)

	'{'            shift, and enter state 86

	Block          goto state 181

State 162

	Stmt -> 'return' '(' Expr ')' .                     (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'bool'         reduce using rule 31
	'break'        reduce using rule 31
	'char'         reduce using rule 31
	'continue'     reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'gen'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'list'         reduce using rule 31
	'next'         reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'while'        reduce using rule 31
	'yield'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_charac       reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 163

	Stmt -> 'list' Ident '=' '[' . ListExpr ']' ';'     (rule 35)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	']'            reduce using rule 80
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 179
	ListExpr       goto state 180

State 164

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 28)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 29)

	'{'            shift, and enter state 86

	Block          goto state 178

State 165

	Stmt -> 'gen' Ident '=' Ident . '(' ListFunArg ')' ';'    (rule 33)

	'('            shift, and enter state 177


State 166

	Stmt -> 'for' '(' Ident 'in' . Ident '(' ListFunArg ')' ')' Block    (rule 34)

	L_Ident        shift, and enter state 2

	Ident          goto state 176

State 167

	Stmt -> Type Ident '=' Expr . ';'                   (rule 22)

	';'            shift, and enter state 175


State 168

	Stmt -> Ident '.add' '(' Expr . ').(' Expr ')' ';'    (rule 38)

	').('          shift, and enter state 174


State 169

	Stmt -> Ident '.push' '(' Expr . ')' ';'            (rule 36)

	')'            shift, and enter state 173


State 170

	Stmt -> Ident '.remove' '(' Expr . ')' ';'          (rule 39)

	')'            shift, and enter state 172


State 171

	Stmt -> Ident '=' Expr ';' .                        (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'char'         reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'gen'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'list'         reduce using rule 23
	'next'         reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'yield'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_charac       reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 172

	Stmt -> Ident '.remove' '(' Expr ')' . ';'          (rule 39)

	';'            shift, and enter state 189


State 173

	Stmt -> Ident '.push' '(' Expr ')' . ';'            (rule 36)

	';'            shift, and enter state 188


State 174

	Stmt -> Ident '.add' '(' Expr ').(' . Expr ')' ';'    (rule 38)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 187

State 175

	Stmt -> Type Ident '=' Expr ';' .                   (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'char'         reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'gen'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'list'         reduce using rule 22
	'next'         reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'yield'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_charac       reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 176

	Stmt -> 'for' '(' Ident 'in' Ident . '(' ListFunArg ')' ')' Block    (rule 34)

	'('            shift, and enter state 186


State 177

	Stmt -> 'gen' Ident '=' Ident '(' . ListFunArg ')' ';'    (rule 33)

	'!'            shift, and enter state 48
	'&'            shift, and enter state 108
	'('            shift, and enter state 49
	')'            reduce using rule 61
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	FunArg         goto state 105
	ListFunArg     goto state 185
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 107

State 178

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 28)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 29)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'char'         reduce using rule 28
	'continue'     reduce using rule 28
	'else'         shift, and enter state 184
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'gen'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'list'         reduce using rule 28
	'next'         reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'yield'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_charac       reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 179

	ListExpr -> Expr .                                  (rule 81)
	ListExpr -> Expr . ',' ListExpr                     (rule 82)

	','            shift, and enter state 183
	']'            reduce using rule 81


State 180

	Stmt -> 'list' Ident '=' '[' ListExpr . ']' ';'     (rule 35)

	']'            shift, and enter state 182


State 181

	Stmt -> 'while' '(' Expr ')' Block .                (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'char'         reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'gen'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'list'         reduce using rule 30
	'next'         reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'while'        reduce using rule 30
	'yield'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_charac       reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 182

	Stmt -> 'list' Ident '=' '[' ListExpr ']' . ';'     (rule 35)

	';'            shift, and enter state 195


State 183

	ListExpr -> Expr ',' . ListExpr                     (rule 82)

	'!'            shift, and enter state 48
	'('            shift, and enter state 49
	'-'            shift, and enter state 50
	']'            reduce using rule 80
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 179
	ListExpr       goto state 194

State 184

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 29)

	'{'            shift, and enter state 86

	Block          goto state 193

State 185

	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg . ')' ';'    (rule 33)

	')'            shift, and enter state 192


State 186

	Stmt -> 'for' '(' Ident 'in' Ident '(' . ListFunArg ')' ')' Block    (rule 34)

	'!'            shift, and enter state 48
	'&'            shift, and enter state 108
	'('            shift, and enter state 49
	')'            reduce using rule 61
	'-'            shift, and enter state 50
	'false'        shift, and enter state 51
	'next'         shift, and enter state 52
	'true'         shift, and enter state 53
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 54
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 33
	Char           goto state 34
	Integer        goto state 35
	String         goto state 36
	Var            goto state 37
	Expr7          goto state 38
	ELit           goto state 39
	EBool          goto state 40
	FunArg         goto state 105
	ListFunArg     goto state 191
	Expr6          goto state 41
	Expr5          goto state 42
	Expr4          goto state 43
	Expr3          goto state 44
	Expr2          goto state 45
	Expr1          goto state 46
	Expr           goto state 107

State 187

	Stmt -> Ident '.add' '(' Expr ').(' Expr . ')' ';'    (rule 38)

	')'            shift, and enter state 190


State 188

	Stmt -> Ident '.push' '(' Expr ')' ';' .            (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	'-'            reduce using rule 36
	';'            reduce using rule 36
	'bool'         reduce using rule 36
	'break'        reduce using rule 36
	'char'         reduce using rule 36
	'continue'     reduce using rule 36
	'false'        reduce using rule 36
	'for'          reduce using rule 36
	'gen'          reduce using rule 36
	'if'           reduce using rule 36
	'int'          reduce using rule 36
	'list'         reduce using rule 36
	'next'         reduce using rule 36
	'return'       reduce using rule 36
	'string'       reduce using rule 36
	'true'         reduce using rule 36
	'while'        reduce using rule 36
	'yield'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_Ident        reduce using rule 36
	L_charac       reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36


State 189

	Stmt -> Ident '.remove' '(' Expr ')' ';' .          (rule 39)

	'!'            reduce using rule 39
	'('            reduce using rule 39
	'-'            reduce using rule 39
	';'            reduce using rule 39
	'bool'         reduce using rule 39
	'break'        reduce using rule 39
	'char'         reduce using rule 39
	'continue'     reduce using rule 39
	'false'        reduce using rule 39
	'for'          reduce using rule 39
	'gen'          reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'list'         reduce using rule 39
	'next'         reduce using rule 39
	'return'       reduce using rule 39
	'string'       reduce using rule 39
	'true'         reduce using rule 39
	'while'        reduce using rule 39
	'yield'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	L_charac       reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39


State 190

	Stmt -> Ident '.add' '(' Expr ').(' Expr ')' . ';'    (rule 38)

	';'            shift, and enter state 198


State 191

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg . ')' ')' Block    (rule 34)

	')'            shift, and enter state 197


State 192

	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg ')' . ';'    (rule 33)

	';'            shift, and enter state 196


State 193

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'char'         reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'gen'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'list'         reduce using rule 29
	'next'         reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'while'        reduce using rule 29
	'yield'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_charac       reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 194

	ListExpr -> Expr ',' ListExpr .                     (rule 82)

	']'            reduce using rule 82


State 195

	Stmt -> 'list' Ident '=' '[' ListExpr ']' ';' .     (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'bool'         reduce using rule 35
	'break'        reduce using rule 35
	'char'         reduce using rule 35
	'continue'     reduce using rule 35
	'false'        reduce using rule 35
	'for'          reduce using rule 35
	'gen'          reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'list'         reduce using rule 35
	'next'         reduce using rule 35
	'return'       reduce using rule 35
	'string'       reduce using rule 35
	'true'         reduce using rule 35
	'while'        reduce using rule 35
	'yield'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_Ident        reduce using rule 35
	L_charac       reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35


State 196

	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg ')' ';' .    (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'bool'         reduce using rule 33
	'break'        reduce using rule 33
	'char'         reduce using rule 33
	'continue'     reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'gen'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'list'         reduce using rule 33
	'next'         reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'while'        reduce using rule 33
	'yield'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_charac       reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 197

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' . ')' Block    (rule 34)

	')'            shift, and enter state 199


State 198

	Stmt -> Ident '.add' '(' Expr ').(' Expr ')' ';' .    (rule 38)

	'!'            reduce using rule 38
	'('            reduce using rule 38
	'-'            reduce using rule 38
	';'            reduce using rule 38
	'bool'         reduce using rule 38
	'break'        reduce using rule 38
	'char'         reduce using rule 38
	'continue'     reduce using rule 38
	'false'        reduce using rule 38
	'for'          reduce using rule 38
	'gen'          reduce using rule 38
	'if'           reduce using rule 38
	'int'          reduce using rule 38
	'list'         reduce using rule 38
	'next'         reduce using rule 38
	'return'       reduce using rule 38
	'string'       reduce using rule 38
	'true'         reduce using rule 38
	'while'        reduce using rule 38
	'yield'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_charac       reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38


State 199

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' . Block    (rule 34)

	'{'            shift, and enter state 86

	Block          goto state 200

State 200

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block .    (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'bool'         reduce using rule 34
	'break'        reduce using rule 34
	'char'         reduce using rule 34
	'continue'     reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'gen'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'list'         reduce using rule 34
	'next'         reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'while'        reduce using rule 34
	'yield'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_charac       reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 94
Number of terminals: 56
Number of non-terminals: 32
Number of states: 201
