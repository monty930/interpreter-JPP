-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGrammar.y
-----------------------------------------------------------------------------


rule 61 is unused
rule 62 is unused
rule 63 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	String -> L_quoted                                 (4)
	Program -> ListTopDef                              (5)
	TopDef -> 'Proc' Ident '(' ListArg ')' Block       (6)
	ListTopDef ->                                      (7)
	ListTopDef -> TopDef ListTopDef                    (8)
	Arg -> Type Ident                                  (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Block -> '{' ListStmt '}'                          (13)
	ListStmt ->                                        (14)
	ListStmt -> Stmt ListStmt                          (15)
	Stmt -> ';'                                        (16)
	Stmt -> Block                                      (17)
	Stmt -> Type Ident '=' Expr ';'                    (18)
	Stmt -> Ident '=' Expr ';'                         (19)
	Stmt -> Ident '++' ';'                             (20)
	Stmt -> Ident '--' ';'                             (21)
	Stmt -> 'if' '(' Expr ')' Block                    (22)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (23)
	Stmt -> 'while' '(' Expr ')' Block                 (24)
	Stmt -> Ident '(' ListFunArg ')'                   (25)
	Stmt -> Expr ';'                                   (26)
	Type -> 'int'                                      (27)
	Type -> 'char'                                     (28)
	Type -> 'string'                                   (29)
	Type -> 'bool'                                     (30)
	Var -> Ident                                       (31)
	Expr7 -> Var                                       (32)
	Expr7 -> ELit                                      (33)
	Expr7 -> '(' Expr ')'                              (34)
	ELit -> Integer                                    (35)
	ELit -> EBool                                      (36)
	ELit -> String                                     (37)
	ELit -> Char                                       (38)
	EBool -> 'true'                                    (39)
	EBool -> 'false'                                   (40)
	FunArg -> Expr                                     (41)
	FunArg -> '&' Var                                  (42)
	ListFunArg ->                                      (43)
	ListFunArg -> FunArg                               (44)
	ListFunArg -> FunArg ',' ListFunArg                (45)
	Expr6 -> '-' Expr7                                 (46)
	Expr6 -> '!' Expr7                                 (47)
	Expr6 -> '(' Type ')' Expr6                        (48)
	Expr6 -> Expr7                                     (49)
	Expr5 -> Expr5 MulOp Expr6                         (50)
	Expr5 -> Expr6                                     (51)
	Expr4 -> Expr4 AddOp Expr5                         (52)
	Expr4 -> Expr5                                     (53)
	Expr3 -> Expr3 RelOp Expr4                         (54)
	Expr3 -> Expr4                                     (55)
	Expr2 -> Expr3 '&&' Expr2                          (56)
	Expr2 -> Expr3                                     (57)
	Expr1 -> Expr2 '||' Expr1                          (58)
	Expr1 -> Expr2                                     (59)
	Expr -> Expr1                                      (60)
	ListExpr ->                                        (61)
	ListExpr -> Expr                                   (62)
	ListExpr -> Expr ',' ListExpr                      (63)
	AddOp -> '+'                                       (64)
	AddOp -> '-'                                       (65)
	MulOp -> '*'                                       (66)
	MulOp -> '/'                                       (67)
	MulOp -> '%'                                       (68)
	RelOp -> '<'                                       (69)
	RelOp -> '<='                                      (70)
	RelOp -> '>'                                       (71)
	RelOp -> '>='                                      (72)
	RelOp -> '=='                                      (73)
	RelOp -> '!='                                      (74)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'Proc'         { PT _ (TS _ 22) }
	'bool'         { PT _ (TS _ 23) }
	'char'         { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'if'           { PT _ (TS _ 27) }
	'int'          { PT _ (TS _ 28) }
	'string'       { PT _ (TS _ 29) }
	'true'         { PT _ (TS _ 30) }
	'while'        { PT _ (TS _ 31) }
	'{'            { PT _ (TS _ 32) }
	'||'           { PT _ (TS _ 33) }
	'}'            { PT _ (TS _ 34) }
	L_Ident        { PT _ (TV _) }
	L_charac       { PT _ (TC _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	String          rule  4
	Program         rule  5
	TopDef          rule  6
	ListTopDef      rules 7, 8
	Arg             rule  9
	ListArg         rules 10, 11, 12
	Block           rule  13
	ListStmt        rules 14, 15
	Stmt            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
	Type            rules 27, 28, 29, 30
	Var             rule  31
	Expr7           rules 32, 33, 34
	ELit            rules 35, 36, 37, 38
	EBool           rules 39, 40
	FunArg          rules 41, 42
	ListFunArg      rules 43, 44, 45
	Expr6           rules 46, 47, 48, 49
	Expr5           rules 50, 51
	Expr4           rules 52, 53
	Expr3           rules 54, 55
	Expr2           rules 56, 57
	Expr1           rules 58, 59
	Expr            rule  60
	ListExpr        rules 61, 62, 63
	AddOp           rules 64, 65
	MulOp           rules 66, 67, 68
	RelOp           rules 69, 70, 71, 72, 73, 74

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'Proc'         shift, and enter state 6
	%eof           reduce using rule 7

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef . ListTopDef                   (rule 8)

	'Proc'         shift, and enter state 6
	%eof           reduce using rule 7

	TopDef         goto state 4
	ListTopDef     goto state 8

State 5

	Program -> ListTopDef .                             (rule 5)

	%eof           reduce using rule 5


State 6

	TopDef -> 'Proc' . Ident '(' ListArg ')' Block      (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 7

State 7

	TopDef -> 'Proc' Ident . '(' ListArg ')' Block      (rule 6)

	'('            shift, and enter state 9


State 8

	ListTopDef -> TopDef ListTopDef .                   (rule 8)

	%eof           reduce using rule 8


State 9

	TopDef -> 'Proc' Ident '(' . ListArg ')' Block      (rule 6)

	')'            reduce using rule 10
	'bool'         shift, and enter state 13
	'char'         shift, and enter state 14
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16

	Arg            goto state 10
	ListArg        goto state 11
	Type           goto state 12

State 10

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 19


State 11

	TopDef -> 'Proc' Ident '(' ListArg . ')' Block      (rule 6)

	')'            shift, and enter state 18


State 12

	Arg -> Type . Ident                                 (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 13

	Type -> 'bool' .                                    (rule 30)

	')'            reduce using rule 30
	L_Ident        reduce using rule 30


State 14

	Type -> 'char' .                                    (rule 28)

	')'            reduce using rule 28
	L_Ident        reduce using rule 28


State 15

	Type -> 'int' .                                     (rule 27)

	')'            reduce using rule 27
	L_Ident        reduce using rule 27


State 16

	Type -> 'string' .                                  (rule 29)

	')'            reduce using rule 29
	L_Ident        reduce using rule 29


State 17

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 18

	TopDef -> 'Proc' Ident '(' ListArg ')' . Block      (rule 6)

	'{'            shift, and enter state 22

	Block          goto state 21

State 19

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'bool'         shift, and enter state 13
	'char'         shift, and enter state 14
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16

	Arg            goto state 10
	ListArg        goto state 20
	Type           goto state 12

State 20

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 21

	TopDef -> 'Proc' Ident '(' ListArg ')' Block .      (rule 6)

	'Proc'         reduce using rule 6
	%eof           reduce using rule 6


State 22

	Block -> '{' . ListStmt '}'                         (rule 13)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	';'            shift, and enter state 45
	'bool'         shift, and enter state 13
	'char'         shift, and enter state 14
	'false'        shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16
	'true'         shift, and enter state 48
	'while'        shift, and enter state 49
	'{'            shift, and enter state 22
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 23
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Block          goto state 27
	ListStmt       goto state 28
	Stmt           goto state 29
	Type           goto state 30
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 41

State 23

	Stmt -> Ident . '=' Expr ';'                        (rule 19)
	Stmt -> Ident . '++' ';'                            (rule 20)
	Stmt -> Ident . '--' ';'                            (rule 21)
	Stmt -> Ident . '(' ListFunArg ')'                  (rule 25)
	Var -> Ident .                                      (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	'('            shift, and enter state 81
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	'++'           shift, and enter state 82
	'-'            reduce using rule 31
	'--'           shift, and enter state 83
	'/'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'='            shift, and enter state 84
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'||'           reduce using rule 31


State 24

	ELit -> Char .                                      (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 25

	ELit -> Integer .                                   (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35


State 26

	ELit -> String .                                    (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 27

	Stmt -> Block .                                     (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'bool'         reduce using rule 17
	'char'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_charac       reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 28

	Block -> '{' ListStmt . '}'                         (rule 13)

	'}'            shift, and enter state 80


State 29

	ListStmt -> Stmt . ListStmt                         (rule 15)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	';'            shift, and enter state 45
	'bool'         shift, and enter state 13
	'char'         shift, and enter state 14
	'false'        shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16
	'true'         shift, and enter state 48
	'while'        shift, and enter state 49
	'{'            shift, and enter state 22
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 23
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Block          goto state 27
	ListStmt       goto state 79
	Stmt           goto state 29
	Type           goto state 30
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 41

State 30

	Stmt -> Type . Ident '=' Expr ';'                   (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 78

State 31

	Expr7 -> Var .                                      (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'||'           reduce using rule 32


State 32

	Expr6 -> Expr7 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 33

	Expr7 -> ELit .                                     (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'||'           reduce using rule 33


State 34

	ELit -> EBool .                                     (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'||'           reduce using rule 36


State 35

	Expr5 -> Expr6 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 36

	Expr5 -> Expr5 . MulOp Expr6                        (rule 50)
	Expr4 -> Expr5 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            shift, and enter state 75
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            shift, and enter state 76
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            shift, and enter state 77
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53

	MulOp          goto state 74

State 37

	Expr4 -> Expr4 . AddOp Expr5                        (rule 52)
	Expr3 -> Expr4 .                                    (rule 55)

	'!='           reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'+'            shift, and enter state 72
	','            reduce using rule 55
	'-'            shift, and enter state 73
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55

	AddOp          goto state 71

State 38

	Expr3 -> Expr3 . RelOp Expr4                        (rule 54)
	Expr2 -> Expr3 . '&&' Expr2                         (rule 56)
	Expr2 -> Expr3 .                                    (rule 57)

	'!='           shift, and enter state 64
	'&&'           shift, and enter state 65
	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'=='           shift, and enter state 68
	'>'            shift, and enter state 69
	'>='           shift, and enter state 70
	'||'           reduce using rule 57

	RelOp          goto state 63

State 39

	Expr1 -> Expr2 . '||' Expr1                         (rule 58)
	Expr1 -> Expr2 .                                    (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'||'           shift, and enter state 62


State 40

	Expr -> Expr1 .                                     (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60


State 41

	Stmt -> Expr . ';'                                  (rule 26)

	';'            shift, and enter state 61


State 42

	Expr6 -> '!' . Expr7                                (rule 47)

	'('            shift, and enter state 57
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 60
	ELit           goto state 33
	EBool          goto state 34

State 43

	Expr7 -> '(' . Expr ')'                             (rule 34)
	Expr6 -> '(' . Type ')' Expr6                       (rule 48)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'bool'         shift, and enter state 13
	'char'         shift, and enter state 14
	'false'        shift, and enter state 46
	'int'          shift, and enter state 15
	'string'       shift, and enter state 16
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Type           goto state 58
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 59

State 44

	Expr6 -> '-' . Expr7                                (rule 46)

	'('            shift, and enter state 57
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 56
	ELit           goto state 33
	EBool          goto state 34

State 45

	Stmt -> ';' .                                       (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'bool'         reduce using rule 16
	'char'         reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_charac       reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 46

	EBool -> 'false' .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 47

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 22)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 23)

	'('            shift, and enter state 54


State 48

	EBool -> 'true' .                                   (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 49

	Stmt -> 'while' . '(' Expr ')' Block                (rule 24)

	'('            shift, and enter state 53


State 50

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 51

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 52

	String -> L_quoted .                                (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'||'           reduce using rule 4


State 53

	Stmt -> 'while' '(' . Expr ')' Block                (rule 24)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 101

State 54

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 22)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 23)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 100

State 55

	Var -> Ident .                                      (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'/'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'||'           reduce using rule 31


State 56

	Expr6 -> '-' Expr7 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 57

	Expr7 -> '(' . Expr ')'                             (rule 34)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 59

State 58

	Expr6 -> '(' Type . ')' Expr6                       (rule 48)

	')'            shift, and enter state 99


State 59

	Expr7 -> '(' Expr . ')'                             (rule 34)

	')'            shift, and enter state 98


State 60

	Expr6 -> '!' Expr7 .                                (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 61

	Stmt -> Expr ';' .                                  (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'char'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_charac       reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 62

	Expr1 -> Expr2 '||' . Expr1                         (rule 58)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 97

State 63

	Expr3 -> Expr3 RelOp . Expr4                        (rule 54)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 96

State 64

	RelOp -> '!=' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_charac       reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 65

	Expr2 -> Expr3 '&&' . Expr2                         (rule 56)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 95

State 66

	RelOp -> '<' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_charac       reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 67

	RelOp -> '<=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_charac       reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 68

	RelOp -> '==' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_charac       reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 69

	RelOp -> '>' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_charac       reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 70

	RelOp -> '>=' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_charac       reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 71

	Expr4 -> Expr4 AddOp . Expr5                        (rule 52)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 94

State 72

	AddOp -> '+' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_charac       reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 73

	AddOp -> '-' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_charac       reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 74

	Expr5 -> Expr5 MulOp . Expr6                        (rule 50)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 93

State 75

	MulOp -> '%' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_charac       reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 76

	MulOp -> '*' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_charac       reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 77

	MulOp -> '/' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_charac       reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 78

	Stmt -> Type Ident . '=' Expr ';'                   (rule 18)

	'='            shift, and enter state 92


State 79

	ListStmt -> Stmt ListStmt .                         (rule 15)

	'}'            reduce using rule 15


State 80

	Block -> '{' ListStmt '}' .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'Proc'         reduce using rule 13
	'bool'         reduce using rule 13
	'char'         reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_charac       reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 81

	Stmt -> Ident '(' . ListFunArg ')'                  (rule 25)

	'!'            shift, and enter state 42
	'&'            shift, and enter state 91
	'('            shift, and enter state 43
	')'            reduce using rule 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	FunArg         goto state 88
	ListFunArg     goto state 89
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 90

State 82

	Stmt -> Ident '++' . ';'                            (rule 20)

	';'            shift, and enter state 87


State 83

	Stmt -> Ident '--' . ';'                            (rule 21)

	';'            shift, and enter state 86


State 84

	Stmt -> Ident '=' . Expr ';'                        (rule 19)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 85

State 85

	Stmt -> Ident '=' Expr . ';'                        (rule 19)

	';'            shift, and enter state 109


State 86

	Stmt -> Ident '--' ';' .                            (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'char'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_charac       reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 87

	Stmt -> Ident '++' ';' .                            (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'char'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_charac       reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 88

	ListFunArg -> FunArg .                              (rule 44)
	ListFunArg -> FunArg . ',' ListFunArg               (rule 45)

	')'            reduce using rule 44
	','            shift, and enter state 108


State 89

	Stmt -> Ident '(' ListFunArg . ')'                  (rule 25)

	')'            shift, and enter state 107


State 90

	FunArg -> Expr .                                    (rule 41)

	')'            reduce using rule 41
	','            reduce using rule 41


State 91

	FunArg -> '&' . Var                                 (rule 42)

	L_Ident        shift, and enter state 2

	Ident          goto state 55
	Var            goto state 106

State 92

	Stmt -> Type Ident '=' . Expr ';'                   (rule 18)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 105

State 93

	Expr5 -> Expr5 MulOp Expr6 .                        (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 94

	Expr5 -> Expr5 . MulOp Expr6                        (rule 50)
	Expr4 -> Expr4 AddOp Expr5 .                        (rule 52)

	'!='           reduce using rule 52
	'%'            shift, and enter state 75
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 76
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            shift, and enter state 77
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52

	MulOp          goto state 74

State 95

	Expr2 -> Expr3 '&&' Expr2 .                         (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'||'           reduce using rule 56


State 96

	Expr4 -> Expr4 . AddOp Expr5                        (rule 52)
	Expr3 -> Expr3 RelOp Expr4 .                        (rule 54)

	'!='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'+'            shift, and enter state 72
	','            reduce using rule 54
	'-'            shift, and enter state 73
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54

	AddOp          goto state 71

State 97

	Expr1 -> Expr2 '||' Expr1 .                         (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58


State 98

	Expr7 -> '(' Expr ')' .                             (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'||'           reduce using rule 34


State 99

	Expr6 -> '(' Type ')' . Expr6                       (rule 48)

	'!'            shift, and enter state 42
	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	Expr6          goto state 104

State 100

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 22)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 23)

	')'            shift, and enter state 103


State 101

	Stmt -> 'while' '(' Expr . ')' Block                (rule 24)

	')'            shift, and enter state 102


State 102

	Stmt -> 'while' '(' Expr ')' . Block                (rule 24)

	'{'            shift, and enter state 22

	Block          goto state 113

State 103

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 22)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 23)

	'{'            shift, and enter state 22

	Block          goto state 112

State 104

	Expr6 -> '(' Type ')' Expr6 .                       (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 105

	Stmt -> Type Ident '=' Expr . ';'                   (rule 18)

	';'            shift, and enter state 111


State 106

	FunArg -> '&' Var .                                 (rule 42)

	')'            reduce using rule 42
	','            reduce using rule 42


State 107

	Stmt -> Ident '(' ListFunArg ')' .                  (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'char'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_charac       reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 108

	ListFunArg -> FunArg ',' . ListFunArg               (rule 45)

	'!'            shift, and enter state 42
	'&'            shift, and enter state 91
	'('            shift, and enter state 43
	')'            reduce using rule 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 50
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 55
	Char           goto state 24
	Integer        goto state 25
	String         goto state 26
	Var            goto state 31
	Expr7          goto state 32
	ELit           goto state 33
	EBool          goto state 34
	FunArg         goto state 88
	ListFunArg     goto state 110
	Expr6          goto state 35
	Expr5          goto state 36
	Expr4          goto state 37
	Expr3          goto state 38
	Expr2          goto state 39
	Expr1          goto state 40
	Expr           goto state 90

State 109

	Stmt -> Ident '=' Expr ';' .                        (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'char'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_charac       reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 110

	ListFunArg -> FunArg ',' ListFunArg .               (rule 45)

	')'            reduce using rule 45


State 111

	Stmt -> Type Ident '=' Expr ';' .                   (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'bool'         reduce using rule 18
	'char'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_charac       reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 112

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 22)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 23)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'char'         reduce using rule 22
	'else'         shift, and enter state 114
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_charac       reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 113

	Stmt -> 'while' '(' Expr ')' Block .                (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'char'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_charac       reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 114

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 23)

	'{'            shift, and enter state 22

	Block          goto state 115

State 115

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'char'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_charac       reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 75
Number of terminals: 38
Number of non-terminals: 31
Number of states: 116
