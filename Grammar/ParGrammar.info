-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGrammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	String -> L_quoted                                 (4)
	Program -> ListTopDef                              (5)
	TopDef -> RetVal Ident '(' ListArg ')' ';'         (6)
	TopDef -> 'list' Type Ident '=' '[' ListExpr ']' ';'   (7)
	TopDef -> RetVal Ident '(' ListArg ')' Block       (8)
	TopDef -> 'Glob' Type Ident '=' Expr ';'           (9)
	TopDef -> 'Gen' Type Ident '(' ListArg ')' Block   (10)
	ListTopDef ->                                      (11)
	ListTopDef -> TopDef ListTopDef                    (12)
	Arg -> Type Ident                                  (13)
	Arg -> 'list' Ident                                (14)
	ListArg ->                                         (15)
	ListArg -> Arg                                     (16)
	ListArg -> Arg ',' ListArg                         (17)
	Block -> '{' ListStmt '}'                          (18)
	ListStmt ->                                        (19)
	ListStmt -> Stmt ListStmt                          (20)
	Stmt -> ';'                                        (21)
	Stmt -> Block                                      (22)
	Stmt -> Type Ident '=' Expr ';'                    (23)
	Stmt -> Ident '=' Expr ';'                         (24)
	Stmt -> Ident '++' ';'                             (25)
	Stmt -> Ident '--' ';'                             (26)
	Stmt -> 'break' ';'                                (27)
	Stmt -> 'continue' ';'                             (28)
	Stmt -> 'if' '(' Expr ')' Block                    (29)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (30)
	Stmt -> 'while' '(' Expr ')' Block                 (31)
	Stmt -> 'return' '(' Expr ')'                      (32)
	Stmt -> 'yield' '(' Expr ')'                       (33)
	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg ')' ';'   (34)
	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block   (35)
	Stmt -> 'list' Type Ident '=' '[' ListExpr ']' ';'   (36)
	Stmt -> Ident '.push' '(' Expr ')' ';'             (37)
	Stmt -> Ident '.pop' ';'                           (38)
	Stmt -> Ident '.add' '(' Expr ').(' Expr ')' ';'   (39)
	Stmt -> Ident '.remove' '(' Expr ')' ';'           (40)
	Stmt -> Expr ';'                                   (41)
	Type -> 'int'                                      (42)
	Type -> 'char'                                     (43)
	Type -> 'string'                                   (44)
	Type -> 'bool'                                     (45)
	RetVal -> Type                                     (46)
	RetVal -> 'Proc'                                   (47)
	Var -> Ident                                       (48)
	Expr7 -> Ident '[' Expr ']'                        (49)
	Expr7 -> Var                                       (50)
	Expr7 -> ELit                                      (51)
	Expr7 -> Ident '.len'                              (52)
	Expr7 -> Ident '(' ListFunArg ')'                  (53)
	Expr7 -> '(' Expr ')'                              (54)
	ELit -> Integer                                    (55)
	ELit -> EBool                                      (56)
	ELit -> String                                     (57)
	ELit -> Char                                       (58)
	EBool -> 'true'                                    (59)
	EBool -> 'false'                                   (60)
	FunArg -> Expr                                     (61)
	FunArg -> '&' Var                                  (62)
	ListFunArg ->                                      (63)
	ListFunArg -> FunArg                               (64)
	ListFunArg -> FunArg ',' ListFunArg                (65)
	Expr6 -> '-' Expr7                                 (66)
	Expr6 -> '!' Expr7                                 (67)
	Expr6 -> '(' Type ')' Expr6                        (68)
	Expr6 -> 'next' '(' Ident ')'                      (69)
	Expr6 -> Expr7                                     (70)
	Expr5 -> Expr5 MulOp Expr6                         (71)
	Expr5 -> Expr6                                     (72)
	Expr4 -> Expr4 AddOp Expr5                         (73)
	Expr4 -> Expr5                                     (74)
	Expr3 -> Expr3 RelOp Expr4                         (75)
	Expr3 -> Expr4                                     (76)
	Expr2 -> Expr3 '&&' Expr2                          (77)
	Expr2 -> Expr3                                     (78)
	Expr1 -> Expr2 '||' Expr1                          (79)
	Expr1 -> Expr2                                     (80)
	Expr -> Expr1                                      (81)
	ListExpr ->                                        (82)
	ListExpr -> Expr                                   (83)
	ListExpr -> Expr ',' ListExpr                      (84)
	AddOp -> '+'                                       (85)
	AddOp -> '-'                                       (86)
	MulOp -> '*'                                       (87)
	MulOp -> '/'                                       (88)
	MulOp -> '%'                                       (89)
	RelOp -> '<'                                       (90)
	RelOp -> '<='                                      (91)
	RelOp -> '>'                                       (92)
	RelOp -> '>='                                      (93)
	RelOp -> '=='                                      (94)
	RelOp -> '!='                                      (95)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	').('          { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'+'            { PT _ (TS _ 10) }
	'++'           { PT _ (TS _ 11) }
	','            { PT _ (TS _ 12) }
	'-'            { PT _ (TS _ 13) }
	'--'           { PT _ (TS _ 14) }
	'.add'         { PT _ (TS _ 15) }
	'.len'         { PT _ (TS _ 16) }
	'.pop'         { PT _ (TS _ 17) }
	'.push'        { PT _ (TS _ 18) }
	'.remove'      { PT _ (TS _ 19) }
	'/'            { PT _ (TS _ 20) }
	';'            { PT _ (TS _ 21) }
	'<'            { PT _ (TS _ 22) }
	'<='           { PT _ (TS _ 23) }
	'='            { PT _ (TS _ 24) }
	'=='           { PT _ (TS _ 25) }
	'>'            { PT _ (TS _ 26) }
	'>='           { PT _ (TS _ 27) }
	'Gen'          { PT _ (TS _ 28) }
	'Glob'         { PT _ (TS _ 29) }
	'Proc'         { PT _ (TS _ 30) }
	'['            { PT _ (TS _ 31) }
	']'            { PT _ (TS _ 32) }
	'bool'         { PT _ (TS _ 33) }
	'break'        { PT _ (TS _ 34) }
	'char'         { PT _ (TS _ 35) }
	'continue'     { PT _ (TS _ 36) }
	'else'         { PT _ (TS _ 37) }
	'false'        { PT _ (TS _ 38) }
	'for'          { PT _ (TS _ 39) }
	'gen'          { PT _ (TS _ 40) }
	'if'           { PT _ (TS _ 41) }
	'in'           { PT _ (TS _ 42) }
	'int'          { PT _ (TS _ 43) }
	'list'         { PT _ (TS _ 44) }
	'next'         { PT _ (TS _ 45) }
	'return'       { PT _ (TS _ 46) }
	'string'       { PT _ (TS _ 47) }
	'true'         { PT _ (TS _ 48) }
	'while'        { PT _ (TS _ 49) }
	'yield'        { PT _ (TS _ 50) }
	'{'            { PT _ (TS _ 51) }
	'||'           { PT _ (TS _ 52) }
	'}'            { PT _ (TS _ 53) }
	L_Ident        { PT _ (TV _) }
	L_charac       { PT _ (TC _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	String          rule  4
	Program         rule  5
	TopDef          rules 6, 7, 8, 9, 10
	ListTopDef      rules 11, 12
	Arg             rules 13, 14
	ListArg         rules 15, 16, 17
	Block           rule  18
	ListStmt        rules 19, 20
	Stmt            rules 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
	Type            rules 42, 43, 44, 45
	RetVal          rules 46, 47
	Var             rule  48
	Expr7           rules 49, 50, 51, 52, 53, 54
	ELit            rules 55, 56, 57, 58
	EBool           rules 59, 60
	FunArg          rules 61, 62
	ListFunArg      rules 63, 64, 65
	Expr6           rules 66, 67, 68, 69, 70
	Expr5           rules 71, 72
	Expr4           rules 73, 74
	Expr3           rules 75, 76
	Expr2           rules 77, 78
	Expr1           rules 79, 80
	Expr            rule  81
	ListExpr        rules 82, 83, 84
	AddOp           rules 85, 86
	MulOp           rules 87, 88, 89
	RelOp           rules 90, 91, 92, 93, 94, 95

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'Gen'          shift, and enter state 8
	'Glob'         shift, and enter state 9
	'Proc'         shift, and enter state 10
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'list'         shift, and enter state 14
	'string'       shift, and enter state 15
	%eof           reduce using rule 11

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6
	RetVal         goto state 7

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	').('          reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.add'         reduce using rule 1
	'.len'         reduce using rule 1
	'.pop'         reduce using rule 1
	'.push'        reduce using rule 1
	'.remove'      reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'in'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef . ListTopDef                   (rule 12)

	'Gen'          shift, and enter state 8
	'Glob'         shift, and enter state 9
	'Proc'         shift, and enter state 10
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'list'         shift, and enter state 14
	'string'       shift, and enter state 15
	%eof           reduce using rule 11

	TopDef         goto state 4
	ListTopDef     goto state 20
	Type           goto state 6
	RetVal         goto state 7

State 5

	Program -> ListTopDef .                             (rule 5)

	%eof           reduce using rule 5


State 6

	RetVal -> Type .                                    (rule 46)

	L_Ident        reduce using rule 46


State 7

	TopDef -> RetVal . Ident '(' ListArg ')' ';'        (rule 6)
	TopDef -> RetVal . Ident '(' ListArg ')' Block      (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 19

State 8

	TopDef -> 'Gen' . Type Ident '(' ListArg ')' Block    (rule 10)

	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 15

	Type           goto state 18

State 9

	TopDef -> 'Glob' . Type Ident '=' Expr ';'          (rule 9)

	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 15

	Type           goto state 17

State 10

	RetVal -> 'Proc' .                                  (rule 47)

	L_Ident        reduce using rule 47


State 11

	Type -> 'bool' .                                    (rule 45)

	')'            reduce using rule 45
	L_Ident        reduce using rule 45


State 12

	Type -> 'char' .                                    (rule 43)

	')'            reduce using rule 43
	L_Ident        reduce using rule 43


State 13

	Type -> 'int' .                                     (rule 42)

	')'            reduce using rule 42
	L_Ident        reduce using rule 42


State 14

	TopDef -> 'list' . Type Ident '=' '[' ListExpr ']' ';'    (rule 7)

	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 15

	Type           goto state 16

State 15

	Type -> 'string' .                                  (rule 44)

	')'            reduce using rule 44
	L_Ident        reduce using rule 44


State 16

	TopDef -> 'list' Type . Ident '=' '[' ListExpr ']' ';'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 24

State 17

	TopDef -> 'Glob' Type . Ident '=' Expr ';'          (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 23

State 18

	TopDef -> 'Gen' Type . Ident '(' ListArg ')' Block    (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 22

State 19

	TopDef -> RetVal Ident . '(' ListArg ')' ';'        (rule 6)
	TopDef -> RetVal Ident . '(' ListArg ')' Block      (rule 8)

	'('            shift, and enter state 21


State 20

	ListTopDef -> TopDef ListTopDef .                   (rule 12)

	%eof           reduce using rule 12


State 21

	TopDef -> RetVal Ident '(' . ListArg ')' ';'        (rule 6)
	TopDef -> RetVal Ident '(' . ListArg ')' Block      (rule 8)

	')'            reduce using rule 15
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'list'         shift, and enter state 31
	'string'       shift, and enter state 15

	Arg            goto state 28
	ListArg        goto state 29
	Type           goto state 30

State 22

	TopDef -> 'Gen' Type Ident . '(' ListArg ')' Block    (rule 10)

	'('            shift, and enter state 27


State 23

	TopDef -> 'Glob' Type Ident . '=' Expr ';'          (rule 9)

	'='            shift, and enter state 26


State 24

	TopDef -> 'list' Type Ident . '=' '[' ListExpr ']' ';'    (rule 7)

	'='            shift, and enter state 25


State 25

	TopDef -> 'list' Type Ident '=' . '[' ListExpr ']' ';'    (rule 7)

	'['            shift, and enter state 61


State 26

	TopDef -> 'Glob' Type Ident '=' . Expr ';'          (rule 9)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 51

State 27

	TopDef -> 'Gen' Type Ident '(' . ListArg ')' Block    (rule 10)

	')'            reduce using rule 15
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'list'         shift, and enter state 31
	'string'       shift, and enter state 15

	Arg            goto state 28
	ListArg        goto state 36
	Type           goto state 30

State 28

	ListArg -> Arg .                                    (rule 16)
	ListArg -> Arg . ',' ListArg                        (rule 17)

	')'            reduce using rule 16
	','            shift, and enter state 35


State 29

	TopDef -> RetVal Ident '(' ListArg . ')' ';'        (rule 6)
	TopDef -> RetVal Ident '(' ListArg . ')' Block      (rule 8)

	')'            shift, and enter state 34


State 30

	Arg -> Type . Ident                                 (rule 13)

	L_Ident        shift, and enter state 2

	Ident          goto state 33

State 31

	Arg -> 'list' . Ident                               (rule 14)

	L_Ident        shift, and enter state 2

	Ident          goto state 32

State 32

	Arg -> 'list' Ident .                               (rule 14)

	')'            reduce using rule 14
	','            reduce using rule 14


State 33

	Arg -> Type Ident .                                 (rule 13)

	')'            reduce using rule 13
	','            reduce using rule 13


State 34

	TopDef -> RetVal Ident '(' ListArg ')' . ';'        (rule 6)
	TopDef -> RetVal Ident '(' ListArg ')' . Block      (rule 8)

	';'            shift, and enter state 93
	'{'            shift, and enter state 94

	Block          goto state 92

State 35

	ListArg -> Arg ',' . ListArg                        (rule 17)

	')'            reduce using rule 15
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'list'         shift, and enter state 31
	'string'       shift, and enter state 15

	Arg            goto state 28
	ListArg        goto state 91
	Type           goto state 30

State 36

	TopDef -> 'Gen' Type Ident '(' ListArg . ')' Block    (rule 10)

	')'            shift, and enter state 90


State 37

	Var -> Ident .                                      (rule 48)
	Expr7 -> Ident . '[' Expr ']'                       (rule 49)
	Expr7 -> Ident . '.len'                             (rule 52)
	Expr7 -> Ident . '(' ListFunArg ')'                 (rule 53)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 87
	')'            reduce using rule 48
	').('          reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'.len'         shift, and enter state 88
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            shift, and enter state 89
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 38

	ELit -> Char .                                      (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	').('          reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 39

	ELit -> Integer .                                   (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	').('          reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 40

	ELit -> String .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	').('          reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 41

	Expr7 -> Var .                                      (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	').('          reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 42

	Expr6 -> Expr7 .                                    (rule 70)

	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	').('          reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70


State 43

	Expr7 -> ELit .                                     (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	').('          reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 44

	ELit -> EBool .                                     (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	').('          reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 45

	Expr5 -> Expr6 .                                    (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	').('          reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'/'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'||'           reduce using rule 72


State 46

	Expr5 -> Expr5 . MulOp Expr6                        (rule 71)
	Expr4 -> Expr5 .                                    (rule 74)

	'!='           reduce using rule 74
	'%'            shift, and enter state 84
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	').('          reduce using rule 74
	'*'            shift, and enter state 85
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'/'            shift, and enter state 86
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	']'            reduce using rule 74
	'||'           reduce using rule 74

	MulOp          goto state 83

State 47

	Expr4 -> Expr4 . AddOp Expr5                        (rule 73)
	Expr3 -> Expr4 .                                    (rule 76)

	'!='           reduce using rule 76
	'&&'           reduce using rule 76
	')'            reduce using rule 76
	').('          reduce using rule 76
	'+'            shift, and enter state 81
	','            reduce using rule 76
	'-'            shift, and enter state 82
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	']'            reduce using rule 76
	'||'           reduce using rule 76

	AddOp          goto state 80

State 48

	Expr3 -> Expr3 . RelOp Expr4                        (rule 75)
	Expr2 -> Expr3 . '&&' Expr2                         (rule 77)
	Expr2 -> Expr3 .                                    (rule 78)

	'!='           shift, and enter state 73
	'&&'           shift, and enter state 74
	')'            reduce using rule 78
	').('          reduce using rule 78
	','            reduce using rule 78
	';'            reduce using rule 78
	'<'            shift, and enter state 75
	'<='           shift, and enter state 76
	'=='           shift, and enter state 77
	'>'            shift, and enter state 78
	'>='           shift, and enter state 79
	']'            reduce using rule 78
	'||'           reduce using rule 78

	RelOp          goto state 72

State 49

	Expr1 -> Expr2 . '||' Expr1                         (rule 79)
	Expr1 -> Expr2 .                                    (rule 80)

	')'            reduce using rule 80
	').('          reduce using rule 80
	','            reduce using rule 80
	';'            reduce using rule 80
	']'            reduce using rule 80
	'||'           shift, and enter state 71


State 50

	Expr -> Expr1 .                                     (rule 81)

	')'            reduce using rule 81
	').('          reduce using rule 81
	','            reduce using rule 81
	';'            reduce using rule 81
	']'            reduce using rule 81


State 51

	TopDef -> 'Glob' Type Ident '=' Expr . ';'          (rule 9)

	';'            shift, and enter state 70


State 52

	Expr6 -> '!' . Expr7                                (rule 67)

	'('            shift, and enter state 66
	'false'        shift, and enter state 55
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 69
	ELit           goto state 43
	EBool          goto state 44

State 53

	Expr7 -> '(' . Expr ')'                             (rule 54)
	Expr6 -> '(' . Type ')' Expr6                       (rule 68)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'false'        shift, and enter state 55
	'int'          shift, and enter state 13
	'next'         shift, and enter state 56
	'string'       shift, and enter state 15
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Type           goto state 67
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 68

State 54

	Expr6 -> '-' . Expr7                                (rule 66)

	'('            shift, and enter state 66
	'false'        shift, and enter state 55
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 65
	ELit           goto state 43
	EBool          goto state 44

State 55

	EBool -> 'false' .                                  (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	').('          reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 56

	Expr6 -> 'next' . '(' Ident ')'                     (rule 69)

	'('            shift, and enter state 64


State 57

	EBool -> 'true' .                                   (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	').('          reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 58

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	').('          reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 59

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	').('          reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 60

	String -> L_quoted .                                (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	').('          reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	']'            reduce using rule 4
	'||'           reduce using rule 4


State 61

	TopDef -> 'list' Type Ident '=' '[' . ListExpr ']' ';'    (rule 7)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	']'            reduce using rule 82
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 62
	ListExpr       goto state 63

State 62

	ListExpr -> Expr .                                  (rule 83)
	ListExpr -> Expr . ',' ListExpr                     (rule 84)

	','            shift, and enter state 126
	']'            reduce using rule 83


State 63

	TopDef -> 'list' Type Ident '=' '[' ListExpr . ']' ';'    (rule 7)

	']'            shift, and enter state 125


State 64

	Expr6 -> 'next' '(' . Ident ')'                     (rule 69)

	L_Ident        shift, and enter state 2

	Ident          goto state 124

State 65

	Expr6 -> '-' Expr7 .                                (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	').('          reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 66

	Expr7 -> '(' . Expr ')'                             (rule 54)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 68

State 67

	Expr6 -> '(' Type . ')' Expr6                       (rule 68)

	')'            shift, and enter state 123


State 68

	Expr7 -> '(' Expr . ')'                             (rule 54)

	')'            shift, and enter state 122


State 69

	Expr6 -> '!' Expr7 .                                (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	').('          reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67


State 70

	TopDef -> 'Glob' Type Ident '=' Expr ';' .          (rule 9)

	'Gen'          reduce using rule 9
	'Glob'         reduce using rule 9
	'Proc'         reduce using rule 9
	'bool'         reduce using rule 9
	'char'         reduce using rule 9
	'int'          reduce using rule 9
	'list'         reduce using rule 9
	'string'       reduce using rule 9
	%eof           reduce using rule 9


State 71

	Expr1 -> Expr2 '||' . Expr1                         (rule 79)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 121

State 72

	Expr3 -> Expr3 RelOp . Expr4                        (rule 75)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 120

State 73

	RelOp -> '!=' .                                     (rule 95)

	'!'            reduce using rule 95
	'('            reduce using rule 95
	'-'            reduce using rule 95
	'false'        reduce using rule 95
	'next'         reduce using rule 95
	'true'         reduce using rule 95
	L_Ident        reduce using rule 95
	L_charac       reduce using rule 95
	L_integ        reduce using rule 95
	L_quoted       reduce using rule 95


State 74

	Expr2 -> Expr3 '&&' . Expr2                         (rule 77)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 119

State 75

	RelOp -> '<' .                                      (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'next'         reduce using rule 90
	'true'         reduce using rule 90
	L_Ident        reduce using rule 90
	L_charac       reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 76

	RelOp -> '<=' .                                     (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'-'            reduce using rule 91
	'false'        reduce using rule 91
	'next'         reduce using rule 91
	'true'         reduce using rule 91
	L_Ident        reduce using rule 91
	L_charac       reduce using rule 91
	L_integ        reduce using rule 91
	L_quoted       reduce using rule 91


State 77

	RelOp -> '==' .                                     (rule 94)

	'!'            reduce using rule 94
	'('            reduce using rule 94
	'-'            reduce using rule 94
	'false'        reduce using rule 94
	'next'         reduce using rule 94
	'true'         reduce using rule 94
	L_Ident        reduce using rule 94
	L_charac       reduce using rule 94
	L_integ        reduce using rule 94
	L_quoted       reduce using rule 94


State 78

	RelOp -> '>' .                                      (rule 92)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'-'            reduce using rule 92
	'false'        reduce using rule 92
	'next'         reduce using rule 92
	'true'         reduce using rule 92
	L_Ident        reduce using rule 92
	L_charac       reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92


State 79

	RelOp -> '>=' .                                     (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'-'            reduce using rule 93
	'false'        reduce using rule 93
	'next'         reduce using rule 93
	'true'         reduce using rule 93
	L_Ident        reduce using rule 93
	L_charac       reduce using rule 93
	L_integ        reduce using rule 93
	L_quoted       reduce using rule 93


State 80

	Expr4 -> Expr4 AddOp . Expr5                        (rule 73)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 118

State 81

	AddOp -> '+' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'next'         reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_charac       reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 82

	AddOp -> '-' .                                      (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'next'         reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_charac       reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 83

	Expr5 -> Expr5 MulOp . Expr6                        (rule 71)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 117

State 84

	MulOp -> '%' .                                      (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'next'         reduce using rule 89
	'true'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_charac       reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 85

	MulOp -> '*' .                                      (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'next'         reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_charac       reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 86

	MulOp -> '/' .                                      (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'next'         reduce using rule 88
	'true'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_charac       reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 87

	Expr7 -> Ident '(' . ListFunArg ')'                 (rule 53)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 116
	'('            shift, and enter state 53
	')'            reduce using rule 63
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	FunArg         goto state 113
	ListFunArg     goto state 114
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 115

State 88

	Expr7 -> Ident '.len' .                             (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	').('          reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 89

	Expr7 -> Ident '[' . Expr ']'                       (rule 49)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 112

State 90

	TopDef -> 'Gen' Type Ident '(' ListArg ')' . Block    (rule 10)

	'{'            shift, and enter state 94

	Block          goto state 111

State 91

	ListArg -> Arg ',' ListArg .                        (rule 17)

	')'            reduce using rule 17


State 92

	TopDef -> RetVal Ident '(' ListArg ')' Block .      (rule 8)

	'Gen'          reduce using rule 8
	'Glob'         reduce using rule 8
	'Proc'         reduce using rule 8
	'bool'         reduce using rule 8
	'char'         reduce using rule 8
	'int'          reduce using rule 8
	'list'         reduce using rule 8
	'string'       reduce using rule 8
	%eof           reduce using rule 8


State 93

	TopDef -> RetVal Ident '(' ListArg ')' ';' .        (rule 6)

	'Gen'          reduce using rule 6
	'Glob'         reduce using rule 6
	'Proc'         reduce using rule 6
	'bool'         reduce using rule 6
	'char'         reduce using rule 6
	'int'          reduce using rule 6
	'list'         reduce using rule 6
	'string'       reduce using rule 6
	%eof           reduce using rule 6


State 94

	Block -> '{' . ListStmt '}'                         (rule 18)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	';'            shift, and enter state 101
	'bool'         shift, and enter state 11
	'break'        shift, and enter state 102
	'char'         shift, and enter state 12
	'continue'     shift, and enter state 103
	'false'        shift, and enter state 55
	'for'          shift, and enter state 104
	'gen'          shift, and enter state 105
	'if'           shift, and enter state 106
	'int'          shift, and enter state 13
	'list'         shift, and enter state 107
	'next'         shift, and enter state 56
	'return'       shift, and enter state 108
	'string'       shift, and enter state 15
	'true'         shift, and enter state 57
	'while'        shift, and enter state 109
	'yield'        shift, and enter state 110
	'{'            shift, and enter state 94
	'}'            reduce using rule 19
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 95
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Block          goto state 96
	ListStmt       goto state 97
	Stmt           goto state 98
	Type           goto state 99
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 100

State 95

	Stmt -> Ident . '=' Expr ';'                        (rule 24)
	Stmt -> Ident . '++' ';'                            (rule 25)
	Stmt -> Ident . '--' ';'                            (rule 26)
	Stmt -> Ident . '.push' '(' Expr ')' ';'            (rule 37)
	Stmt -> Ident . '.pop' ';'                          (rule 38)
	Stmt -> Ident . '.add' '(' Expr ').(' Expr ')' ';'    (rule 39)
	Stmt -> Ident . '.remove' '(' Expr ')' ';'          (rule 40)
	Var -> Ident .                                      (rule 48)
	Expr7 -> Ident . '[' Expr ']'                       (rule 49)
	Expr7 -> Ident . '.len'                             (rule 52)
	Expr7 -> Ident . '(' ListFunArg ')'                 (rule 53)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 87
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'++'           shift, and enter state 149
	'-'            reduce using rule 48
	'--'           shift, and enter state 150
	'.add'         shift, and enter state 151
	'.len'         shift, and enter state 88
	'.pop'         shift, and enter state 152
	'.push'        shift, and enter state 153
	'.remove'      shift, and enter state 154
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            shift, and enter state 155
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            shift, and enter state 89
	'||'           reduce using rule 48


State 96

	Stmt -> Block .                                     (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'char'         reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'gen'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'list'         reduce using rule 22
	'next'         reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'yield'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_charac       reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 97

	Block -> '{' ListStmt . '}'                         (rule 18)

	'}'            shift, and enter state 148


State 98

	ListStmt -> Stmt . ListStmt                         (rule 20)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	';'            shift, and enter state 101
	'bool'         shift, and enter state 11
	'break'        shift, and enter state 102
	'char'         shift, and enter state 12
	'continue'     shift, and enter state 103
	'false'        shift, and enter state 55
	'for'          shift, and enter state 104
	'gen'          shift, and enter state 105
	'if'           shift, and enter state 106
	'int'          shift, and enter state 13
	'list'         shift, and enter state 107
	'next'         shift, and enter state 56
	'return'       shift, and enter state 108
	'string'       shift, and enter state 15
	'true'         shift, and enter state 57
	'while'        shift, and enter state 109
	'yield'        shift, and enter state 110
	'{'            shift, and enter state 94
	'}'            reduce using rule 19
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 95
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Block          goto state 96
	ListStmt       goto state 147
	Stmt           goto state 98
	Type           goto state 99
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 100

State 99

	Stmt -> Type . Ident '=' Expr ';'                   (rule 23)

	L_Ident        shift, and enter state 2

	Ident          goto state 146

State 100

	Stmt -> Expr . ';'                                  (rule 41)

	';'            shift, and enter state 145


State 101

	Stmt -> ';' .                                       (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'char'         reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'gen'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'list'         reduce using rule 21
	'next'         reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'yield'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_charac       reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 102

	Stmt -> 'break' . ';'                               (rule 27)

	';'            shift, and enter state 144


State 103

	Stmt -> 'continue' . ';'                            (rule 28)

	';'            shift, and enter state 143


State 104

	Stmt -> 'for' . '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block    (rule 35)

	'('            shift, and enter state 142


State 105

	Stmt -> 'gen' . Ident '=' Ident '(' ListFunArg ')' ';'    (rule 34)

	L_Ident        shift, and enter state 2

	Ident          goto state 141

State 106

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 29)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 30)

	'('            shift, and enter state 140


State 107

	Stmt -> 'list' . Type Ident '=' '[' ListExpr ']' ';'    (rule 36)

	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 15

	Type           goto state 139

State 108

	Stmt -> 'return' . '(' Expr ')'                     (rule 32)

	'('            shift, and enter state 138


State 109

	Stmt -> 'while' . '(' Expr ')' Block                (rule 31)

	'('            shift, and enter state 137


State 110

	Stmt -> 'yield' . '(' Expr ')'                      (rule 33)

	'('            shift, and enter state 136


State 111

	TopDef -> 'Gen' Type Ident '(' ListArg ')' Block .    (rule 10)

	'Gen'          reduce using rule 10
	'Glob'         reduce using rule 10
	'Proc'         reduce using rule 10
	'bool'         reduce using rule 10
	'char'         reduce using rule 10
	'int'          reduce using rule 10
	'list'         reduce using rule 10
	'string'       reduce using rule 10
	%eof           reduce using rule 10


State 112

	Expr7 -> Ident '[' Expr . ']'                       (rule 49)

	']'            shift, and enter state 135


State 113

	ListFunArg -> FunArg .                              (rule 64)
	ListFunArg -> FunArg . ',' ListFunArg               (rule 65)

	')'            reduce using rule 64
	','            shift, and enter state 134


State 114

	Expr7 -> Ident '(' ListFunArg . ')'                 (rule 53)

	')'            shift, and enter state 133


State 115

	FunArg -> Expr .                                    (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61


State 116

	FunArg -> '&' . Var                                 (rule 62)

	L_Ident        shift, and enter state 2

	Ident          goto state 131
	Var            goto state 132

State 117

	Expr5 -> Expr5 MulOp Expr6 .                        (rule 71)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	').('          reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'/'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71


State 118

	Expr5 -> Expr5 . MulOp Expr6                        (rule 71)
	Expr4 -> Expr4 AddOp Expr5 .                        (rule 73)

	'!='           reduce using rule 73
	'%'            shift, and enter state 84
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	').('          reduce using rule 73
	'*'            shift, and enter state 85
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'/'            shift, and enter state 86
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	']'            reduce using rule 73
	'||'           reduce using rule 73

	MulOp          goto state 83

State 119

	Expr2 -> Expr3 '&&' Expr2 .                         (rule 77)

	')'            reduce using rule 77
	').('          reduce using rule 77
	','            reduce using rule 77
	';'            reduce using rule 77
	']'            reduce using rule 77
	'||'           reduce using rule 77


State 120

	Expr4 -> Expr4 . AddOp Expr5                        (rule 73)
	Expr3 -> Expr3 RelOp Expr4 .                        (rule 75)

	'!='           reduce using rule 75
	'&&'           reduce using rule 75
	')'            reduce using rule 75
	').('          reduce using rule 75
	'+'            shift, and enter state 81
	','            reduce using rule 75
	'-'            shift, and enter state 82
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	']'            reduce using rule 75
	'||'           reduce using rule 75

	AddOp          goto state 80

State 121

	Expr1 -> Expr2 '||' Expr1 .                         (rule 79)

	')'            reduce using rule 79
	').('          reduce using rule 79
	','            reduce using rule 79
	';'            reduce using rule 79
	']'            reduce using rule 79


State 122

	Expr7 -> '(' Expr ')' .                             (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	').('          reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 123

	Expr6 -> '(' Type ')' . Expr6                       (rule 68)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 130

State 124

	Expr6 -> 'next' '(' Ident . ')'                     (rule 69)

	')'            shift, and enter state 129


State 125

	TopDef -> 'list' Type Ident '=' '[' ListExpr ']' . ';'    (rule 7)

	';'            shift, and enter state 128


State 126

	ListExpr -> Expr ',' . ListExpr                     (rule 84)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	']'            reduce using rule 82
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 62
	ListExpr       goto state 127

State 127

	ListExpr -> Expr ',' ListExpr .                     (rule 84)

	']'            reduce using rule 84


State 128

	TopDef -> 'list' Type Ident '=' '[' ListExpr ']' ';' .    (rule 7)

	'Gen'          reduce using rule 7
	'Glob'         reduce using rule 7
	'Proc'         reduce using rule 7
	'bool'         reduce using rule 7
	'char'         reduce using rule 7
	'int'          reduce using rule 7
	'list'         reduce using rule 7
	'string'       reduce using rule 7
	%eof           reduce using rule 7


State 129

	Expr6 -> 'next' '(' Ident ')' .                     (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	').('          reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69


State 130

	Expr6 -> '(' Type ')' Expr6 .                       (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	').('          reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68


State 131

	Var -> Ident .                                      (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48


State 132

	FunArg -> '&' Var .                                 (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62


State 133

	Expr7 -> Ident '(' ListFunArg ')' .                 (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	').('          reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 134

	ListFunArg -> FunArg ',' . ListFunArg               (rule 65)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 116
	'('            shift, and enter state 53
	')'            reduce using rule 63
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	FunArg         goto state 113
	ListFunArg     goto state 171
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 115

State 135

	Expr7 -> Ident '[' Expr ']' .                       (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	').('          reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 136

	Stmt -> 'yield' '(' . Expr ')'                      (rule 33)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 170

State 137

	Stmt -> 'while' '(' . Expr ')' Block                (rule 31)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 169

State 138

	Stmt -> 'return' '(' . Expr ')'                     (rule 32)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 168

State 139

	Stmt -> 'list' Type . Ident '=' '[' ListExpr ']' ';'    (rule 36)

	L_Ident        shift, and enter state 2

	Ident          goto state 167

State 140

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 29)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 30)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 166

State 141

	Stmt -> 'gen' Ident . '=' Ident '(' ListFunArg ')' ';'    (rule 34)

	'='            shift, and enter state 165


State 142

	Stmt -> 'for' '(' . Ident 'in' Ident '(' ListFunArg ')' ')' Block    (rule 35)

	L_Ident        shift, and enter state 2

	Ident          goto state 164

State 143

	Stmt -> 'continue' ';' .                            (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'char'         reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'gen'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'list'         reduce using rule 28
	'next'         reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'yield'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_charac       reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 144

	Stmt -> 'break' ';' .                               (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'char'         reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'gen'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'list'         reduce using rule 27
	'next'         reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'yield'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_charac       reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 145

	Stmt -> Expr ';' .                                  (rule 41)

	'!'            reduce using rule 41
	'('            reduce using rule 41
	'-'            reduce using rule 41
	';'            reduce using rule 41
	'bool'         reduce using rule 41
	'break'        reduce using rule 41
	'char'         reduce using rule 41
	'continue'     reduce using rule 41
	'false'        reduce using rule 41
	'for'          reduce using rule 41
	'gen'          reduce using rule 41
	'if'           reduce using rule 41
	'int'          reduce using rule 41
	'list'         reduce using rule 41
	'next'         reduce using rule 41
	'return'       reduce using rule 41
	'string'       reduce using rule 41
	'true'         reduce using rule 41
	'while'        reduce using rule 41
	'yield'        reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_Ident        reduce using rule 41
	L_charac       reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41


State 146

	Stmt -> Type Ident . '=' Expr ';'                   (rule 23)

	'='            shift, and enter state 163


State 147

	ListStmt -> Stmt ListStmt .                         (rule 20)

	'}'            reduce using rule 20


State 148

	Block -> '{' ListStmt '}' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'Gen'          reduce using rule 18
	'Glob'         reduce using rule 18
	'Proc'         reduce using rule 18
	'bool'         reduce using rule 18
	'break'        reduce using rule 18
	'char'         reduce using rule 18
	'continue'     reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'gen'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'list'         reduce using rule 18
	'next'         reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'yield'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_charac       reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 149

	Stmt -> Ident '++' . ';'                            (rule 25)

	';'            shift, and enter state 162


State 150

	Stmt -> Ident '--' . ';'                            (rule 26)

	';'            shift, and enter state 161


State 151

	Stmt -> Ident '.add' . '(' Expr ').(' Expr ')' ';'    (rule 39)

	'('            shift, and enter state 160


State 152

	Stmt -> Ident '.pop' . ';'                          (rule 38)

	';'            shift, and enter state 159


State 153

	Stmt -> Ident '.push' . '(' Expr ')' ';'            (rule 37)

	'('            shift, and enter state 158


State 154

	Stmt -> Ident '.remove' . '(' Expr ')' ';'          (rule 40)

	'('            shift, and enter state 157


State 155

	Stmt -> Ident '=' . Expr ';'                        (rule 24)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 156

State 156

	Stmt -> Ident '=' Expr . ';'                        (rule 24)

	';'            shift, and enter state 183


State 157

	Stmt -> Ident '.remove' '(' . Expr ')' ';'          (rule 40)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 182

State 158

	Stmt -> Ident '.push' '(' . Expr ')' ';'            (rule 37)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 181

State 159

	Stmt -> Ident '.pop' ';' .                          (rule 38)

	'!'            reduce using rule 38
	'('            reduce using rule 38
	'-'            reduce using rule 38
	';'            reduce using rule 38
	'bool'         reduce using rule 38
	'break'        reduce using rule 38
	'char'         reduce using rule 38
	'continue'     reduce using rule 38
	'false'        reduce using rule 38
	'for'          reduce using rule 38
	'gen'          reduce using rule 38
	'if'           reduce using rule 38
	'int'          reduce using rule 38
	'list'         reduce using rule 38
	'next'         reduce using rule 38
	'return'       reduce using rule 38
	'string'       reduce using rule 38
	'true'         reduce using rule 38
	'while'        reduce using rule 38
	'yield'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_charac       reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38


State 160

	Stmt -> Ident '.add' '(' . Expr ').(' Expr ')' ';'    (rule 39)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 180

State 161

	Stmt -> Ident '--' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'char'         reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'gen'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'list'         reduce using rule 26
	'next'         reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'yield'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_charac       reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 162

	Stmt -> Ident '++' ';' .                            (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'char'         reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'gen'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'list'         reduce using rule 25
	'next'         reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'yield'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_charac       reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 163

	Stmt -> Type Ident '=' . Expr ';'                   (rule 23)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 179

State 164

	Stmt -> 'for' '(' Ident . 'in' Ident '(' ListFunArg ')' ')' Block    (rule 35)

	'in'           shift, and enter state 178


State 165

	Stmt -> 'gen' Ident '=' . Ident '(' ListFunArg ')' ';'    (rule 34)

	L_Ident        shift, and enter state 2

	Ident          goto state 177

State 166

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 29)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 30)

	')'            shift, and enter state 176


State 167

	Stmt -> 'list' Type Ident . '=' '[' ListExpr ']' ';'    (rule 36)

	'='            shift, and enter state 175


State 168

	Stmt -> 'return' '(' Expr . ')'                     (rule 32)

	')'            shift, and enter state 174


State 169

	Stmt -> 'while' '(' Expr . ')' Block                (rule 31)

	')'            shift, and enter state 173


State 170

	Stmt -> 'yield' '(' Expr . ')'                      (rule 33)

	')'            shift, and enter state 172


State 171

	ListFunArg -> FunArg ',' ListFunArg .               (rule 65)

	')'            reduce using rule 65


State 172

	Stmt -> 'yield' '(' Expr ')' .                      (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'bool'         reduce using rule 33
	'break'        reduce using rule 33
	'char'         reduce using rule 33
	'continue'     reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'gen'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'list'         reduce using rule 33
	'next'         reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'while'        reduce using rule 33
	'yield'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_charac       reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 173

	Stmt -> 'while' '(' Expr ')' . Block                (rule 31)

	'{'            shift, and enter state 94

	Block          goto state 192

State 174

	Stmt -> 'return' '(' Expr ')' .                     (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'bool'         reduce using rule 32
	'break'        reduce using rule 32
	'char'         reduce using rule 32
	'continue'     reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'gen'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'list'         reduce using rule 32
	'next'         reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'while'        reduce using rule 32
	'yield'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_charac       reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 175

	Stmt -> 'list' Type Ident '=' . '[' ListExpr ']' ';'    (rule 36)

	'['            shift, and enter state 191


State 176

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 29)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 30)

	'{'            shift, and enter state 94

	Block          goto state 190

State 177

	Stmt -> 'gen' Ident '=' Ident . '(' ListFunArg ')' ';'    (rule 34)

	'('            shift, and enter state 189


State 178

	Stmt -> 'for' '(' Ident 'in' . Ident '(' ListFunArg ')' ')' Block    (rule 35)

	L_Ident        shift, and enter state 2

	Ident          goto state 188

State 179

	Stmt -> Type Ident '=' Expr . ';'                   (rule 23)

	';'            shift, and enter state 187


State 180

	Stmt -> Ident '.add' '(' Expr . ').(' Expr ')' ';'    (rule 39)

	').('          shift, and enter state 186


State 181

	Stmt -> Ident '.push' '(' Expr . ')' ';'            (rule 37)

	')'            shift, and enter state 185


State 182

	Stmt -> Ident '.remove' '(' Expr . ')' ';'          (rule 40)

	')'            shift, and enter state 184


State 183

	Stmt -> Ident '=' Expr ';' .                        (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'char'         reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'gen'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'list'         reduce using rule 24
	'next'         reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'yield'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_charac       reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 184

	Stmt -> Ident '.remove' '(' Expr ')' . ';'          (rule 40)

	';'            shift, and enter state 199


State 185

	Stmt -> Ident '.push' '(' Expr ')' . ';'            (rule 37)

	';'            shift, and enter state 198


State 186

	Stmt -> Ident '.add' '(' Expr ').(' . Expr ')' ';'    (rule 39)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 197

State 187

	Stmt -> Type Ident '=' Expr ';' .                   (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'char'         reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'gen'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'list'         reduce using rule 23
	'next'         reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'yield'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_charac       reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 188

	Stmt -> 'for' '(' Ident 'in' Ident . '(' ListFunArg ')' ')' Block    (rule 35)

	'('            shift, and enter state 196


State 189

	Stmt -> 'gen' Ident '=' Ident '(' . ListFunArg ')' ';'    (rule 34)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 116
	'('            shift, and enter state 53
	')'            reduce using rule 63
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	FunArg         goto state 113
	ListFunArg     goto state 195
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 115

State 190

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 29)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 30)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'char'         reduce using rule 29
	'continue'     reduce using rule 29
	'else'         shift, and enter state 194
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'gen'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'list'         reduce using rule 29
	'next'         reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'while'        reduce using rule 29
	'yield'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_charac       reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 191

	Stmt -> 'list' Type Ident '=' '[' . ListExpr ']' ';'    (rule 36)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'-'            shift, and enter state 54
	']'            reduce using rule 82
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 62
	ListExpr       goto state 193

State 192

	Stmt -> 'while' '(' Expr ')' Block .                (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'bool'         reduce using rule 31
	'break'        reduce using rule 31
	'char'         reduce using rule 31
	'continue'     reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'gen'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'list'         reduce using rule 31
	'next'         reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'while'        reduce using rule 31
	'yield'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_charac       reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 193

	Stmt -> 'list' Type Ident '=' '[' ListExpr . ']' ';'    (rule 36)

	']'            shift, and enter state 204


State 194

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 30)

	'{'            shift, and enter state 94

	Block          goto state 203

State 195

	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg . ')' ';'    (rule 34)

	')'            shift, and enter state 202


State 196

	Stmt -> 'for' '(' Ident 'in' Ident '(' . ListFunArg ')' ')' Block    (rule 35)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 116
	'('            shift, and enter state 53
	')'            reduce using rule 63
	'-'            shift, and enter state 54
	'false'        shift, and enter state 55
	'next'         shift, and enter state 56
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 37
	Char           goto state 38
	Integer        goto state 39
	String         goto state 40
	Var            goto state 41
	Expr7          goto state 42
	ELit           goto state 43
	EBool          goto state 44
	FunArg         goto state 113
	ListFunArg     goto state 201
	Expr6          goto state 45
	Expr5          goto state 46
	Expr4          goto state 47
	Expr3          goto state 48
	Expr2          goto state 49
	Expr1          goto state 50
	Expr           goto state 115

State 197

	Stmt -> Ident '.add' '(' Expr ').(' Expr . ')' ';'    (rule 39)

	')'            shift, and enter state 200


State 198

	Stmt -> Ident '.push' '(' Expr ')' ';' .            (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	';'            reduce using rule 37
	'bool'         reduce using rule 37
	'break'        reduce using rule 37
	'char'         reduce using rule 37
	'continue'     reduce using rule 37
	'false'        reduce using rule 37
	'for'          reduce using rule 37
	'gen'          reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'list'         reduce using rule 37
	'next'         reduce using rule 37
	'return'       reduce using rule 37
	'string'       reduce using rule 37
	'true'         reduce using rule 37
	'while'        reduce using rule 37
	'yield'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_Ident        reduce using rule 37
	L_charac       reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37


State 199

	Stmt -> Ident '.remove' '(' Expr ')' ';' .          (rule 40)

	'!'            reduce using rule 40
	'('            reduce using rule 40
	'-'            reduce using rule 40
	';'            reduce using rule 40
	'bool'         reduce using rule 40
	'break'        reduce using rule 40
	'char'         reduce using rule 40
	'continue'     reduce using rule 40
	'false'        reduce using rule 40
	'for'          reduce using rule 40
	'gen'          reduce using rule 40
	'if'           reduce using rule 40
	'int'          reduce using rule 40
	'list'         reduce using rule 40
	'next'         reduce using rule 40
	'return'       reduce using rule 40
	'string'       reduce using rule 40
	'true'         reduce using rule 40
	'while'        reduce using rule 40
	'yield'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_Ident        reduce using rule 40
	L_charac       reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40


State 200

	Stmt -> Ident '.add' '(' Expr ').(' Expr ')' . ';'    (rule 39)

	';'            shift, and enter state 208


State 201

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg . ')' ')' Block    (rule 35)

	')'            shift, and enter state 207


State 202

	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg ')' . ';'    (rule 34)

	';'            shift, and enter state 206


State 203

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'char'         reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'gen'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'list'         reduce using rule 30
	'next'         reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'while'        reduce using rule 30
	'yield'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_charac       reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 204

	Stmt -> 'list' Type Ident '=' '[' ListExpr ']' . ';'    (rule 36)

	';'            shift, and enter state 205


State 205

	Stmt -> 'list' Type Ident '=' '[' ListExpr ']' ';' .    (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	'-'            reduce using rule 36
	';'            reduce using rule 36
	'bool'         reduce using rule 36
	'break'        reduce using rule 36
	'char'         reduce using rule 36
	'continue'     reduce using rule 36
	'false'        reduce using rule 36
	'for'          reduce using rule 36
	'gen'          reduce using rule 36
	'if'           reduce using rule 36
	'int'          reduce using rule 36
	'list'         reduce using rule 36
	'next'         reduce using rule 36
	'return'       reduce using rule 36
	'string'       reduce using rule 36
	'true'         reduce using rule 36
	'while'        reduce using rule 36
	'yield'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_Ident        reduce using rule 36
	L_charac       reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36


State 206

	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg ')' ';' .    (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'bool'         reduce using rule 34
	'break'        reduce using rule 34
	'char'         reduce using rule 34
	'continue'     reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'gen'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'list'         reduce using rule 34
	'next'         reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'while'        reduce using rule 34
	'yield'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_charac       reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 207

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' . ')' Block    (rule 35)

	')'            shift, and enter state 209


State 208

	Stmt -> Ident '.add' '(' Expr ').(' Expr ')' ';' .    (rule 39)

	'!'            reduce using rule 39
	'('            reduce using rule 39
	'-'            reduce using rule 39
	';'            reduce using rule 39
	'bool'         reduce using rule 39
	'break'        reduce using rule 39
	'char'         reduce using rule 39
	'continue'     reduce using rule 39
	'false'        reduce using rule 39
	'for'          reduce using rule 39
	'gen'          reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'list'         reduce using rule 39
	'next'         reduce using rule 39
	'return'       reduce using rule 39
	'string'       reduce using rule 39
	'true'         reduce using rule 39
	'while'        reduce using rule 39
	'yield'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	L_charac       reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39


State 209

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' . Block    (rule 35)

	'{'            shift, and enter state 94

	Block          goto state 210

State 210

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block .    (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'bool'         reduce using rule 35
	'break'        reduce using rule 35
	'char'         reduce using rule 35
	'continue'     reduce using rule 35
	'false'        reduce using rule 35
	'for'          reduce using rule 35
	'gen'          reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'list'         reduce using rule 35
	'next'         reduce using rule 35
	'return'       reduce using rule 35
	'string'       reduce using rule 35
	'true'         reduce using rule 35
	'while'        reduce using rule 35
	'yield'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_Ident        reduce using rule 35
	L_charac       reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 96
Number of terminals: 57
Number of non-terminals: 32
Number of states: 211
