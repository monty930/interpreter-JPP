-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGrammar.y
-----------------------------------------------------------------------------


rule 65 is unused
rule 66 is unused
rule 67 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	String -> L_quoted                                 (4)
	Program -> ListTopDef                              (5)
	TopDef -> RetVal Ident '(' ListArg ')' Block       (6)
	TopDef -> 'Glob' Type Ident '=' Expr ';'           (7)
	ListTopDef ->                                      (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	Arg -> Type Ident                                  (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	Block -> '{' ListStmt '}'                          (14)
	ListStmt ->                                        (15)
	ListStmt -> Stmt ListStmt                          (16)
	Stmt -> ';'                                        (17)
	Stmt -> Block                                      (18)
	Stmt -> Type Ident '=' Expr ';'                    (19)
	Stmt -> Ident '=' Expr ';'                         (20)
	Stmt -> Ident '++' ';'                             (21)
	Stmt -> Ident '--' ';'                             (22)
	Stmt -> 'if' '(' Expr ')' Block                    (23)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (24)
	Stmt -> 'while' '(' Expr ')' Block                 (25)
	Stmt -> 'return' '(' Expr ')'                      (26)
	Stmt -> Expr ';'                                   (27)
	Type -> 'int'                                      (28)
	Type -> 'char'                                     (29)
	Type -> 'string'                                   (30)
	Type -> 'bool'                                     (31)
	RetVal -> Type                                     (32)
	RetVal -> 'Proc'                                   (33)
	Var -> Ident                                       (34)
	Expr7 -> Var                                       (35)
	Expr7 -> ELit                                      (36)
	Expr7 -> Ident '(' ListFunArg ')'                  (37)
	Expr7 -> '(' Expr ')'                              (38)
	ELit -> Integer                                    (39)
	ELit -> EBool                                      (40)
	ELit -> String                                     (41)
	ELit -> Char                                       (42)
	EBool -> 'true'                                    (43)
	EBool -> 'false'                                   (44)
	FunArg -> Expr                                     (45)
	FunArg -> '&' Var                                  (46)
	ListFunArg ->                                      (47)
	ListFunArg -> FunArg                               (48)
	ListFunArg -> FunArg ',' ListFunArg                (49)
	Expr6 -> '-' Expr7                                 (50)
	Expr6 -> '!' Expr7                                 (51)
	Expr6 -> '(' Type ')' Expr6                        (52)
	Expr6 -> Expr7                                     (53)
	Expr5 -> Expr5 MulOp Expr6                         (54)
	Expr5 -> Expr6                                     (55)
	Expr4 -> Expr4 AddOp Expr5                         (56)
	Expr4 -> Expr5                                     (57)
	Expr3 -> Expr3 RelOp Expr4                         (58)
	Expr3 -> Expr4                                     (59)
	Expr2 -> Expr3 '&&' Expr2                          (60)
	Expr2 -> Expr3                                     (61)
	Expr1 -> Expr2 '||' Expr1                          (62)
	Expr1 -> Expr2                                     (63)
	Expr -> Expr1                                      (64)
	ListExpr ->                                        (65)
	ListExpr -> Expr                                   (66)
	ListExpr -> Expr ',' ListExpr                      (67)
	AddOp -> '+'                                       (68)
	AddOp -> '-'                                       (69)
	MulOp -> '*'                                       (70)
	MulOp -> '/'                                       (71)
	MulOp -> '%'                                       (72)
	RelOp -> '<'                                       (73)
	RelOp -> '<='                                      (74)
	RelOp -> '>'                                       (75)
	RelOp -> '>='                                      (76)
	RelOp -> '=='                                      (77)
	RelOp -> '!='                                      (78)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'Glob'         { PT _ (TS _ 22) }
	'Proc'         { PT _ (TS _ 23) }
	'bool'         { PT _ (TS _ 24) }
	'char'         { PT _ (TS _ 25) }
	'else'         { PT _ (TS _ 26) }
	'false'        { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'return'       { PT _ (TS _ 30) }
	'string'       { PT _ (TS _ 31) }
	'true'         { PT _ (TS _ 32) }
	'while'        { PT _ (TS _ 33) }
	'{'            { PT _ (TS _ 34) }
	'||'           { PT _ (TS _ 35) }
	'}'            { PT _ (TS _ 36) }
	L_Ident        { PT _ (TV _) }
	L_charac       { PT _ (TC _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	String          rule  4
	Program         rule  5
	TopDef          rules 6, 7
	ListTopDef      rules 8, 9
	Arg             rule  10
	ListArg         rules 11, 12, 13
	Block           rule  14
	ListStmt        rules 15, 16
	Stmt            rules 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
	Type            rules 28, 29, 30, 31
	RetVal          rules 32, 33
	Var             rule  34
	Expr7           rules 35, 36, 37, 38
	ELit            rules 39, 40, 41, 42
	EBool           rules 43, 44
	FunArg          rules 45, 46
	ListFunArg      rules 47, 48, 49
	Expr6           rules 50, 51, 52, 53
	Expr5           rules 54, 55
	Expr4           rules 56, 57
	Expr3           rules 58, 59
	Expr2           rules 60, 61
	Expr1           rules 62, 63
	Expr            rule  64
	ListExpr        rules 65, 66, 67
	AddOp           rules 68, 69
	MulOp           rules 70, 71, 72
	RelOp           rules 73, 74, 75, 76, 77, 78

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'Glob'         shift, and enter state 8
	'Proc'         shift, and enter state 9
	'bool'         shift, and enter state 10
	'char'         shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	%eof           reduce using rule 8

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6
	RetVal         goto state 7

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'Glob'         shift, and enter state 8
	'Proc'         shift, and enter state 9
	'bool'         shift, and enter state 10
	'char'         shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	%eof           reduce using rule 8

	TopDef         goto state 4
	ListTopDef     goto state 16
	Type           goto state 6
	RetVal         goto state 7

State 5

	Program -> ListTopDef .                             (rule 5)

	%eof           reduce using rule 5


State 6

	RetVal -> Type .                                    (rule 32)

	L_Ident        reduce using rule 32


State 7

	TopDef -> RetVal . Ident '(' ListArg ')' Block      (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 15

State 8

	TopDef -> 'Glob' . Type Ident '=' Expr ';'          (rule 7)

	'bool'         shift, and enter state 10
	'char'         shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13

	Type           goto state 14

State 9

	RetVal -> 'Proc' .                                  (rule 33)

	L_Ident        reduce using rule 33


State 10

	Type -> 'bool' .                                    (rule 31)

	')'            reduce using rule 31
	L_Ident        reduce using rule 31


State 11

	Type -> 'char' .                                    (rule 29)

	')'            reduce using rule 29
	L_Ident        reduce using rule 29


State 12

	Type -> 'int' .                                     (rule 28)

	')'            reduce using rule 28
	L_Ident        reduce using rule 28


State 13

	Type -> 'string' .                                  (rule 30)

	')'            reduce using rule 30
	L_Ident        reduce using rule 30


State 14

	TopDef -> 'Glob' Type . Ident '=' Expr ';'          (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 18

State 15

	TopDef -> RetVal Ident . '(' ListArg ')' Block      (rule 6)

	'('            shift, and enter state 17


State 16

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 17

	TopDef -> RetVal Ident '(' . ListArg ')' Block      (rule 6)

	')'            reduce using rule 11
	'bool'         shift, and enter state 10
	'char'         shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13

	Arg            goto state 20
	ListArg        goto state 21
	Type           goto state 22

State 18

	TopDef -> 'Glob' Type Ident . '=' Expr ';'          (rule 7)

	'='            shift, and enter state 19


State 19

	TopDef -> 'Glob' Type Ident '=' . Expr ';'          (rule 7)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 40

State 20

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 25


State 21

	TopDef -> RetVal Ident '(' ListArg . ')' Block      (rule 6)

	')'            shift, and enter state 24


State 22

	Arg -> Type . Ident                                 (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 23

State 23

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 24

	TopDef -> RetVal Ident '(' ListArg ')' . Block      (rule 6)

	'{'            shift, and enter state 74

	Block          goto state 73

State 25

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'bool'         shift, and enter state 10
	'char'         shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13

	Arg            goto state 20
	ListArg        goto state 72
	Type           goto state 22

State 26

	Var -> Ident .                                      (rule 34)
	Expr7 -> Ident . '(' ListFunArg ')'                 (rule 37)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	'('            shift, and enter state 71
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'||'           reduce using rule 34


State 27

	ELit -> Char .                                      (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 28

	ELit -> Integer .                                   (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 29

	ELit -> String .                                    (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 30

	Expr7 -> Var .                                      (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35


State 31

	Expr6 -> Expr7 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 32

	Expr7 -> ELit .                                     (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'||'           reduce using rule 36


State 33

	ELit -> EBool .                                     (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 34

	Expr5 -> Expr6 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 35

	Expr5 -> Expr5 . MulOp Expr6                        (rule 54)
	Expr4 -> Expr5 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            shift, and enter state 68
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            shift, and enter state 69
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            shift, and enter state 70
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57

	MulOp          goto state 67

State 36

	Expr4 -> Expr4 . AddOp Expr5                        (rule 56)
	Expr3 -> Expr4 .                                    (rule 59)

	'!='           reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'+'            shift, and enter state 65
	','            reduce using rule 59
	'-'            shift, and enter state 66
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59

	AddOp          goto state 64

State 37

	Expr3 -> Expr3 . RelOp Expr4                        (rule 58)
	Expr2 -> Expr3 . '&&' Expr2                         (rule 60)
	Expr2 -> Expr3 .                                    (rule 61)

	'!='           shift, and enter state 57
	'&&'           shift, and enter state 58
	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'<'            shift, and enter state 59
	'<='           shift, and enter state 60
	'=='           shift, and enter state 61
	'>'            shift, and enter state 62
	'>='           shift, and enter state 63
	'||'           reduce using rule 61

	RelOp          goto state 56

State 38

	Expr1 -> Expr2 . '||' Expr1                         (rule 62)
	Expr1 -> Expr2 .                                    (rule 63)

	')'            reduce using rule 63
	','            reduce using rule 63
	';'            reduce using rule 63
	'||'           shift, and enter state 55


State 39

	Expr -> Expr1 .                                     (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	';'            reduce using rule 64


State 40

	TopDef -> 'Glob' Type Ident '=' Expr . ';'          (rule 7)

	';'            shift, and enter state 54


State 41

	Expr6 -> '!' . Expr7                                (rule 51)

	'('            shift, and enter state 50
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 53
	ELit           goto state 32
	EBool          goto state 33

State 42

	Expr7 -> '(' . Expr ')'                             (rule 38)
	Expr6 -> '(' . Type ')' Expr6                       (rule 52)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'bool'         shift, and enter state 10
	'char'         shift, and enter state 11
	'false'        shift, and enter state 44
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Type           goto state 51
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 52

State 43

	Expr6 -> '-' . Expr7                                (rule 50)

	'('            shift, and enter state 50
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 49
	ELit           goto state 32
	EBool          goto state 33

State 44

	EBool -> 'false' .                                  (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 45

	EBool -> 'true' .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 46

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 47

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 48

	String -> L_quoted .                                (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'||'           reduce using rule 4


State 49

	Expr6 -> '-' Expr7 .                                (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 50

	Expr7 -> '(' . Expr ')'                             (rule 38)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 52

State 51

	Expr6 -> '(' Type . ')' Expr6                       (rule 52)

	')'            shift, and enter state 95


State 52

	Expr7 -> '(' Expr . ')'                             (rule 38)

	')'            shift, and enter state 94


State 53

	Expr6 -> '!' Expr7 .                                (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 54

	TopDef -> 'Glob' Type Ident '=' Expr ';' .          (rule 7)

	'Glob'         reduce using rule 7
	'Proc'         reduce using rule 7
	'bool'         reduce using rule 7
	'char'         reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	%eof           reduce using rule 7


State 55

	Expr1 -> Expr2 '||' . Expr1                         (rule 62)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 93

State 56

	Expr3 -> Expr3 RelOp . Expr4                        (rule 58)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 92

State 57

	RelOp -> '!=' .                                     (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_charac       reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 58

	Expr2 -> Expr3 '&&' . Expr2                         (rule 60)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 91

State 59

	RelOp -> '<' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_charac       reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 60

	RelOp -> '<=' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_charac       reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 61

	RelOp -> '==' .                                     (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_charac       reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 62

	RelOp -> '>' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_charac       reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 63

	RelOp -> '>=' .                                     (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_charac       reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 64

	Expr4 -> Expr4 AddOp . Expr5                        (rule 56)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 90

State 65

	AddOp -> '+' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_charac       reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 66

	AddOp -> '-' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_charac       reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 67

	Expr5 -> Expr5 MulOp . Expr6                        (rule 54)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 89

State 68

	MulOp -> '%' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_charac       reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 69

	MulOp -> '*' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_charac       reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 70

	MulOp -> '/' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_charac       reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 71

	Expr7 -> Ident '(' . ListFunArg ')'                 (rule 37)

	'!'            shift, and enter state 41
	'&'            shift, and enter state 88
	'('            shift, and enter state 42
	')'            reduce using rule 47
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	FunArg         goto state 85
	ListFunArg     goto state 86
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 87

State 72

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 73

	TopDef -> RetVal Ident '(' ListArg ')' Block .      (rule 6)

	'Glob'         reduce using rule 6
	'Proc'         reduce using rule 6
	'bool'         reduce using rule 6
	'char'         reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	%eof           reduce using rule 6


State 74

	Block -> '{' . ListStmt '}'                         (rule 14)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	';'            shift, and enter state 81
	'bool'         shift, and enter state 10
	'char'         shift, and enter state 11
	'false'        shift, and enter state 44
	'if'           shift, and enter state 82
	'int'          shift, and enter state 12
	'return'       shift, and enter state 83
	'string'       shift, and enter state 13
	'true'         shift, and enter state 45
	'while'        shift, and enter state 84
	'{'            shift, and enter state 74
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 75
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Block          goto state 76
	ListStmt       goto state 77
	Stmt           goto state 78
	Type           goto state 79
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 80

State 75

	Stmt -> Ident . '=' Expr ';'                        (rule 20)
	Stmt -> Ident . '++' ';'                            (rule 21)
	Stmt -> Ident . '--' ';'                            (rule 22)
	Var -> Ident .                                      (rule 34)
	Expr7 -> Ident . '(' ListFunArg ')'                 (rule 37)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	'('            shift, and enter state 71
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	'++'           shift, and enter state 108
	'-'            reduce using rule 34
	'--'           shift, and enter state 109
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'='            shift, and enter state 110
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'||'           reduce using rule 34


State 76

	Stmt -> Block .                                     (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'bool'         reduce using rule 18
	'char'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_charac       reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 77

	Block -> '{' ListStmt . '}'                         (rule 14)

	'}'            shift, and enter state 107


State 78

	ListStmt -> Stmt . ListStmt                         (rule 16)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	';'            shift, and enter state 81
	'bool'         shift, and enter state 10
	'char'         shift, and enter state 11
	'false'        shift, and enter state 44
	'if'           shift, and enter state 82
	'int'          shift, and enter state 12
	'return'       shift, and enter state 83
	'string'       shift, and enter state 13
	'true'         shift, and enter state 45
	'while'        shift, and enter state 84
	'{'            shift, and enter state 74
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 75
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Block          goto state 76
	ListStmt       goto state 106
	Stmt           goto state 78
	Type           goto state 79
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 80

State 79

	Stmt -> Type . Ident '=' Expr ';'                   (rule 19)

	L_Ident        shift, and enter state 2

	Ident          goto state 105

State 80

	Stmt -> Expr . ';'                                  (rule 27)

	';'            shift, and enter state 104


State 81

	Stmt -> ';' .                                       (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'bool'         reduce using rule 17
	'char'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_charac       reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 82

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 23)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 24)

	'('            shift, and enter state 103


State 83

	Stmt -> 'return' . '(' Expr ')'                     (rule 26)

	'('            shift, and enter state 102


State 84

	Stmt -> 'while' . '(' Expr ')' Block                (rule 25)

	'('            shift, and enter state 101


State 85

	ListFunArg -> FunArg .                              (rule 48)
	ListFunArg -> FunArg . ',' ListFunArg               (rule 49)

	')'            reduce using rule 48
	','            shift, and enter state 100


State 86

	Expr7 -> Ident '(' ListFunArg . ')'                 (rule 37)

	')'            shift, and enter state 99


State 87

	FunArg -> Expr .                                    (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45


State 88

	FunArg -> '&' . Var                                 (rule 46)

	L_Ident        shift, and enter state 2

	Ident          goto state 97
	Var            goto state 98

State 89

	Expr5 -> Expr5 MulOp Expr6 .                        (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 90

	Expr5 -> Expr5 . MulOp Expr6                        (rule 54)
	Expr4 -> Expr4 AddOp Expr5 .                        (rule 56)

	'!='           reduce using rule 56
	'%'            shift, and enter state 68
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            shift, and enter state 69
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            shift, and enter state 70
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56

	MulOp          goto state 67

State 91

	Expr2 -> Expr3 '&&' Expr2 .                         (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'||'           reduce using rule 60


State 92

	Expr4 -> Expr4 . AddOp Expr5                        (rule 56)
	Expr3 -> Expr3 RelOp Expr4 .                        (rule 58)

	'!='           reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'+'            shift, and enter state 65
	','            reduce using rule 58
	'-'            shift, and enter state 66
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58

	AddOp          goto state 64

State 93

	Expr1 -> Expr2 '||' Expr1 .                         (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62


State 94

	Expr7 -> '(' Expr ')' .                             (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 95

	Expr6 -> '(' Type ')' . Expr6                       (rule 52)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 96

State 96

	Expr6 -> '(' Type ')' Expr6 .                       (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 97

	Var -> Ident .                                      (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34


State 98

	FunArg -> '&' Var .                                 (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46


State 99

	Expr7 -> Ident '(' ListFunArg ')' .                 (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 100

	ListFunArg -> FunArg ',' . ListFunArg               (rule 49)

	'!'            shift, and enter state 41
	'&'            shift, and enter state 88
	'('            shift, and enter state 42
	')'            reduce using rule 47
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	FunArg         goto state 85
	ListFunArg     goto state 118
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 87

State 101

	Stmt -> 'while' '(' . Expr ')' Block                (rule 25)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 117

State 102

	Stmt -> 'return' '(' . Expr ')'                     (rule 26)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 116

State 103

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 23)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 24)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 115

State 104

	Stmt -> Expr ';' .                                  (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'char'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_charac       reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 105

	Stmt -> Type Ident . '=' Expr ';'                   (rule 19)

	'='            shift, and enter state 114


State 106

	ListStmt -> Stmt ListStmt .                         (rule 16)

	'}'            reduce using rule 16


State 107

	Block -> '{' ListStmt '}' .                         (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'Glob'         reduce using rule 14
	'Proc'         reduce using rule 14
	'bool'         reduce using rule 14
	'char'         reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_charac       reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 108

	Stmt -> Ident '++' . ';'                            (rule 21)

	';'            shift, and enter state 113


State 109

	Stmt -> Ident '--' . ';'                            (rule 22)

	';'            shift, and enter state 112


State 110

	Stmt -> Ident '=' . Expr ';'                        (rule 20)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 111

State 111

	Stmt -> Ident '=' Expr . ';'                        (rule 20)

	';'            shift, and enter state 123


State 112

	Stmt -> Ident '--' ';' .                            (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'char'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_charac       reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 113

	Stmt -> Ident '++' ';' .                            (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'char'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_charac       reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 114

	Stmt -> Type Ident '=' . Expr ';'                   (rule 19)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'false'        shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 46
	L_integ        shift, and enter state 47
	L_quoted       shift, and enter state 48

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	String         goto state 29
	Var            goto state 30
	Expr7          goto state 31
	ELit           goto state 32
	EBool          goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 122

State 115

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 23)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 24)

	')'            shift, and enter state 121


State 116

	Stmt -> 'return' '(' Expr . ')'                     (rule 26)

	')'            shift, and enter state 120


State 117

	Stmt -> 'while' '(' Expr . ')' Block                (rule 25)

	')'            shift, and enter state 119


State 118

	ListFunArg -> FunArg ',' ListFunArg .               (rule 49)

	')'            reduce using rule 49


State 119

	Stmt -> 'while' '(' Expr ')' . Block                (rule 25)

	'{'            shift, and enter state 74

	Block          goto state 126

State 120

	Stmt -> 'return' '(' Expr ')' .                     (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'char'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_charac       reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 121

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 23)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 24)

	'{'            shift, and enter state 74

	Block          goto state 125

State 122

	Stmt -> Type Ident '=' Expr . ';'                   (rule 19)

	';'            shift, and enter state 124


State 123

	Stmt -> Ident '=' Expr ';' .                        (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'char'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_charac       reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 124

	Stmt -> Type Ident '=' Expr ';' .                   (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'char'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_charac       reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 125

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 23)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 24)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'char'         reduce using rule 23
	'else'         shift, and enter state 127
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_charac       reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 126

	Stmt -> 'while' '(' Expr ')' Block .                (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'char'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_charac       reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 127

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 24)

	'{'            shift, and enter state 74

	Block          goto state 128

State 128

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'char'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_charac       reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 79
Number of terminals: 40
Number of non-terminals: 32
Number of states: 129
