-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGrammar.y
-----------------------------------------------------------------------------


rule 70 is unused
rule 71 is unused
rule 72 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	String -> L_quoted                                 (4)
	Program -> ListTopDef                              (5)
	TopDef -> RetVal Ident '(' ListArg ')' Block       (6)
	TopDef -> 'Glob' Type Ident '=' Expr ';'           (7)
	TopDef -> 'Gen' Type Ident '(' ListArg ')' Block   (8)
	ListTopDef ->                                      (9)
	ListTopDef -> TopDef ListTopDef                    (10)
	Arg -> Type Ident                                  (11)
	ListArg ->                                         (12)
	ListArg -> Arg                                     (13)
	ListArg -> Arg ',' ListArg                         (14)
	Block -> '{' ListStmt '}'                          (15)
	ListStmt ->                                        (16)
	ListStmt -> Stmt ListStmt                          (17)
	Stmt -> ';'                                        (18)
	Stmt -> Block                                      (19)
	Stmt -> Type Ident '=' Expr ';'                    (20)
	Stmt -> Ident '=' Expr ';'                         (21)
	Stmt -> Ident '++' ';'                             (22)
	Stmt -> Ident '--' ';'                             (23)
	Stmt -> 'if' '(' Expr ')' Block                    (24)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (25)
	Stmt -> 'while' '(' Expr ')' Block                 (26)
	Stmt -> 'return' '(' Expr ')'                      (27)
	Stmt -> 'yield' '(' Expr ')'                       (28)
	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg ')'   (29)
	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block   (30)
	Stmt -> Expr ';'                                   (31)
	Type -> 'int'                                      (32)
	Type -> 'char'                                     (33)
	Type -> 'string'                                   (34)
	Type -> 'bool'                                     (35)
	RetVal -> Type                                     (36)
	RetVal -> 'Proc'                                   (37)
	Var -> Ident                                       (38)
	Expr7 -> Var                                       (39)
	Expr7 -> ELit                                      (40)
	Expr7 -> Ident '(' ListFunArg ')'                  (41)
	Expr7 -> '(' Expr ')'                              (42)
	ELit -> Integer                                    (43)
	ELit -> EBool                                      (44)
	ELit -> String                                     (45)
	ELit -> Char                                       (46)
	EBool -> 'true'                                    (47)
	EBool -> 'false'                                   (48)
	FunArg -> Expr                                     (49)
	FunArg -> '&' Var                                  (50)
	ListFunArg ->                                      (51)
	ListFunArg -> FunArg                               (52)
	ListFunArg -> FunArg ',' ListFunArg                (53)
	Expr6 -> '-' Expr7                                 (54)
	Expr6 -> '!' Expr7                                 (55)
	Expr6 -> '(' Type ')' Expr6                        (56)
	Expr6 -> 'next' '(' Ident ')'                      (57)
	Expr6 -> Expr7                                     (58)
	Expr5 -> Expr5 MulOp Expr6                         (59)
	Expr5 -> Expr6                                     (60)
	Expr4 -> Expr4 AddOp Expr5                         (61)
	Expr4 -> Expr5                                     (62)
	Expr3 -> Expr3 RelOp Expr4                         (63)
	Expr3 -> Expr4                                     (64)
	Expr2 -> Expr3 '&&' Expr2                          (65)
	Expr2 -> Expr3                                     (66)
	Expr1 -> Expr2 '||' Expr1                          (67)
	Expr1 -> Expr2                                     (68)
	Expr -> Expr1                                      (69)
	ListExpr ->                                        (70)
	ListExpr -> Expr                                   (71)
	ListExpr -> Expr ',' ListExpr                      (72)
	AddOp -> '+'                                       (73)
	AddOp -> '-'                                       (74)
	MulOp -> '*'                                       (75)
	MulOp -> '/'                                       (76)
	MulOp -> '%'                                       (77)
	RelOp -> '<'                                       (78)
	RelOp -> '<='                                      (79)
	RelOp -> '>'                                       (80)
	RelOp -> '>='                                      (81)
	RelOp -> '=='                                      (82)
	RelOp -> '!='                                      (83)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'Gen'          { PT _ (TS _ 22) }
	'Glob'         { PT _ (TS _ 23) }
	'Proc'         { PT _ (TS _ 24) }
	'bool'         { PT _ (TS _ 25) }
	'char'         { PT _ (TS _ 26) }
	'else'         { PT _ (TS _ 27) }
	'false'        { PT _ (TS _ 28) }
	'for'          { PT _ (TS _ 29) }
	'gen'          { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'in'           { PT _ (TS _ 32) }
	'int'          { PT _ (TS _ 33) }
	'next'         { PT _ (TS _ 34) }
	'return'       { PT _ (TS _ 35) }
	'string'       { PT _ (TS _ 36) }
	'true'         { PT _ (TS _ 37) }
	'while'        { PT _ (TS _ 38) }
	'yield'        { PT _ (TS _ 39) }
	'{'            { PT _ (TS _ 40) }
	'||'           { PT _ (TS _ 41) }
	'}'            { PT _ (TS _ 42) }
	L_Ident        { PT _ (TV _) }
	L_charac       { PT _ (TC _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	String          rule  4
	Program         rule  5
	TopDef          rules 6, 7, 8
	ListTopDef      rules 9, 10
	Arg             rule  11
	ListArg         rules 12, 13, 14
	Block           rule  15
	ListStmt        rules 16, 17
	Stmt            rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
	Type            rules 32, 33, 34, 35
	RetVal          rules 36, 37
	Var             rule  38
	Expr7           rules 39, 40, 41, 42
	ELit            rules 43, 44, 45, 46
	EBool           rules 47, 48
	FunArg          rules 49, 50
	ListFunArg      rules 51, 52, 53
	Expr6           rules 54, 55, 56, 57, 58
	Expr5           rules 59, 60
	Expr4           rules 61, 62
	Expr3           rules 63, 64
	Expr2           rules 65, 66
	Expr1           rules 67, 68
	Expr            rule  69
	ListExpr        rules 70, 71, 72
	AddOp           rules 73, 74
	MulOp           rules 75, 76, 77
	RelOp           rules 78, 79, 80, 81, 82, 83

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'Gen'          shift, and enter state 8
	'Glob'         shift, and enter state 9
	'Proc'         shift, and enter state 10
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14
	%eof           reduce using rule 9

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6
	RetVal         goto state 7

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'in'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef . ListTopDef                   (rule 10)

	'Gen'          shift, and enter state 8
	'Glob'         shift, and enter state 9
	'Proc'         shift, and enter state 10
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14
	%eof           reduce using rule 9

	TopDef         goto state 4
	ListTopDef     goto state 18
	Type           goto state 6
	RetVal         goto state 7

State 5

	Program -> ListTopDef .                             (rule 5)

	%eof           reduce using rule 5


State 6

	RetVal -> Type .                                    (rule 36)

	L_Ident        reduce using rule 36


State 7

	TopDef -> RetVal . Ident '(' ListArg ')' Block      (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 8

	TopDef -> 'Gen' . Type Ident '(' ListArg ')' Block    (rule 8)

	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Type           goto state 16

State 9

	TopDef -> 'Glob' . Type Ident '=' Expr ';'          (rule 7)

	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Type           goto state 15

State 10

	RetVal -> 'Proc' .                                  (rule 37)

	L_Ident        reduce using rule 37


State 11

	Type -> 'bool' .                                    (rule 35)

	')'            reduce using rule 35
	L_Ident        reduce using rule 35


State 12

	Type -> 'char' .                                    (rule 33)

	')'            reduce using rule 33
	L_Ident        reduce using rule 33


State 13

	Type -> 'int' .                                     (rule 32)

	')'            reduce using rule 32
	L_Ident        reduce using rule 32


State 14

	Type -> 'string' .                                  (rule 34)

	')'            reduce using rule 34
	L_Ident        reduce using rule 34


State 15

	TopDef -> 'Glob' Type . Ident '=' Expr ';'          (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 21

State 16

	TopDef -> 'Gen' Type . Ident '(' ListArg ')' Block    (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 20

State 17

	TopDef -> RetVal Ident . '(' ListArg ')' Block      (rule 6)

	'('            shift, and enter state 19


State 18

	ListTopDef -> TopDef ListTopDef .                   (rule 10)

	%eof           reduce using rule 10


State 19

	TopDef -> RetVal Ident '(' . ListArg ')' Block      (rule 6)

	')'            reduce using rule 12
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Arg            goto state 24
	ListArg        goto state 25
	Type           goto state 26

State 20

	TopDef -> 'Gen' Type Ident . '(' ListArg ')' Block    (rule 8)

	'('            shift, and enter state 23


State 21

	TopDef -> 'Glob' Type Ident . '=' Expr ';'          (rule 7)

	'='            shift, and enter state 22


State 22

	TopDef -> 'Glob' Type Ident '=' . Expr ';'          (rule 7)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 45

State 23

	TopDef -> 'Gen' Type Ident '(' . ListArg ')' Block    (rule 8)

	')'            reduce using rule 12
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Arg            goto state 24
	ListArg        goto state 30
	Type           goto state 26

State 24

	ListArg -> Arg .                                    (rule 13)
	ListArg -> Arg . ',' ListArg                        (rule 14)

	')'            reduce using rule 13
	','            shift, and enter state 29


State 25

	TopDef -> RetVal Ident '(' ListArg . ')' Block      (rule 6)

	')'            shift, and enter state 28


State 26

	Arg -> Type . Ident                                 (rule 11)

	L_Ident        shift, and enter state 2

	Ident          goto state 27

State 27

	Arg -> Type Ident .                                 (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11


State 28

	TopDef -> RetVal Ident '(' ListArg ')' . Block      (rule 6)

	'{'            shift, and enter state 82

	Block          goto state 81

State 29

	ListArg -> Arg ',' . ListArg                        (rule 14)

	')'            reduce using rule 12
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Arg            goto state 24
	ListArg        goto state 80
	Type           goto state 26

State 30

	TopDef -> 'Gen' Type Ident '(' ListArg . ')' Block    (rule 8)

	')'            shift, and enter state 79


State 31

	Var -> Ident .                                      (rule 38)
	Expr7 -> Ident . '(' ListFunArg ')'                 (rule 41)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            shift, and enter state 78
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 32

	ELit -> Char .                                      (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 33

	ELit -> Integer .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 34

	ELit -> String .                                    (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 35

	Expr7 -> Var .                                      (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 36

	Expr6 -> Expr7 .                                    (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58


State 37

	Expr7 -> ELit .                                     (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 38

	ELit -> EBool .                                     (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 39

	Expr5 -> Expr6 .                                    (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60


State 40

	Expr5 -> Expr5 . MulOp Expr6                        (rule 59)
	Expr4 -> Expr5 .                                    (rule 62)

	'!='           reduce using rule 62
	'%'            shift, and enter state 75
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            shift, and enter state 76
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            shift, and enter state 77
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62

	MulOp          goto state 74

State 41

	Expr4 -> Expr4 . AddOp Expr5                        (rule 61)
	Expr3 -> Expr4 .                                    (rule 64)

	'!='           reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'+'            shift, and enter state 72
	','            reduce using rule 64
	'-'            shift, and enter state 73
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64

	AddOp          goto state 71

State 42

	Expr3 -> Expr3 . RelOp Expr4                        (rule 63)
	Expr2 -> Expr3 . '&&' Expr2                         (rule 65)
	Expr2 -> Expr3 .                                    (rule 66)

	'!='           shift, and enter state 64
	'&&'           shift, and enter state 65
	')'            reduce using rule 66
	','            reduce using rule 66
	';'            reduce using rule 66
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'=='           shift, and enter state 68
	'>'            shift, and enter state 69
	'>='           shift, and enter state 70
	'||'           reduce using rule 66

	RelOp          goto state 63

State 43

	Expr1 -> Expr2 . '||' Expr1                         (rule 67)
	Expr1 -> Expr2 .                                    (rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68
	'||'           shift, and enter state 62


State 44

	Expr -> Expr1 .                                     (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69


State 45

	TopDef -> 'Glob' Type Ident '=' Expr . ';'          (rule 7)

	';'            shift, and enter state 61


State 46

	Expr6 -> '!' . Expr7                                (rule 55)

	'('            shift, and enter state 57
	'false'        shift, and enter state 49
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 60
	ELit           goto state 37
	EBool          goto state 38

State 47

	Expr7 -> '(' . Expr ')'                             (rule 42)
	Expr6 -> '(' . Type ')' Expr6                       (rule 56)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'false'        shift, and enter state 49
	'int'          shift, and enter state 13
	'next'         shift, and enter state 50
	'string'       shift, and enter state 14
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Type           goto state 58
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 59

State 48

	Expr6 -> '-' . Expr7                                (rule 54)

	'('            shift, and enter state 57
	'false'        shift, and enter state 49
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 56
	ELit           goto state 37
	EBool          goto state 38

State 49

	EBool -> 'false' .                                  (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 50

	Expr6 -> 'next' . '(' Ident ')'                     (rule 57)

	'('            shift, and enter state 55


State 51

	EBool -> 'true' .                                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 52

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 53

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 54

	String -> L_quoted .                                (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'||'           reduce using rule 4


State 55

	Expr6 -> 'next' '(' . Ident ')'                     (rule 57)

	L_Ident        shift, and enter state 2

	Ident          goto state 108

State 56

	Expr6 -> '-' Expr7 .                                (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 57

	Expr7 -> '(' . Expr ')'                             (rule 42)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 59

State 58

	Expr6 -> '(' Type . ')' Expr6                       (rule 56)

	')'            shift, and enter state 107


State 59

	Expr7 -> '(' Expr . ')'                             (rule 42)

	')'            shift, and enter state 106


State 60

	Expr6 -> '!' Expr7 .                                (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 61

	TopDef -> 'Glob' Type Ident '=' Expr ';' .          (rule 7)

	'Gen'          reduce using rule 7
	'Glob'         reduce using rule 7
	'Proc'         reduce using rule 7
	'bool'         reduce using rule 7
	'char'         reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	%eof           reduce using rule 7


State 62

	Expr1 -> Expr2 '||' . Expr1                         (rule 67)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 105

State 63

	Expr3 -> Expr3 RelOp . Expr4                        (rule 63)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 104

State 64

	RelOp -> '!=' .                                     (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'next'         reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_charac       reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 65

	Expr2 -> Expr3 '&&' . Expr2                         (rule 65)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 103

State 66

	RelOp -> '<' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'next'         reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_charac       reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 67

	RelOp -> '<=' .                                     (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'next'         reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_charac       reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 68

	RelOp -> '==' .                                     (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'next'         reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_charac       reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 69

	RelOp -> '>' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'next'         reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_charac       reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 70

	RelOp -> '>=' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'next'         reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_charac       reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 71

	Expr4 -> Expr4 AddOp . Expr5                        (rule 61)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 102

State 72

	AddOp -> '+' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'next'         reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_charac       reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 73

	AddOp -> '-' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'next'         reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_charac       reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 74

	Expr5 -> Expr5 MulOp . Expr6                        (rule 59)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 101

State 75

	MulOp -> '%' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'next'         reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_charac       reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 76

	MulOp -> '*' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'next'         reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_charac       reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 77

	MulOp -> '/' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'next'         reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_charac       reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 78

	Expr7 -> Ident '(' . ListFunArg ')'                 (rule 41)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 100
	'('            shift, and enter state 47
	')'            reduce using rule 51
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	FunArg         goto state 97
	ListFunArg     goto state 98
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 99

State 79

	TopDef -> 'Gen' Type Ident '(' ListArg ')' . Block    (rule 8)

	'{'            shift, and enter state 82

	Block          goto state 96

State 80

	ListArg -> Arg ',' ListArg .                        (rule 14)

	')'            reduce using rule 14


State 81

	TopDef -> RetVal Ident '(' ListArg ')' Block .      (rule 6)

	'Gen'          reduce using rule 6
	'Glob'         reduce using rule 6
	'Proc'         reduce using rule 6
	'bool'         reduce using rule 6
	'char'         reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	%eof           reduce using rule 6


State 82

	Block -> '{' . ListStmt '}'                         (rule 15)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	';'            shift, and enter state 89
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'false'        shift, and enter state 49
	'for'          shift, and enter state 90
	'gen'          shift, and enter state 91
	'if'           shift, and enter state 92
	'int'          shift, and enter state 13
	'next'         shift, and enter state 50
	'return'       shift, and enter state 93
	'string'       shift, and enter state 14
	'true'         shift, and enter state 51
	'while'        shift, and enter state 94
	'yield'        shift, and enter state 95
	'{'            shift, and enter state 82
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 83
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Block          goto state 84
	ListStmt       goto state 85
	Stmt           goto state 86
	Type           goto state 87
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 88

State 83

	Stmt -> Ident . '=' Expr ';'                        (rule 21)
	Stmt -> Ident . '++' ';'                            (rule 22)
	Stmt -> Ident . '--' ';'                            (rule 23)
	Var -> Ident .                                      (rule 38)
	Expr7 -> Ident . '(' ListFunArg ')'                 (rule 41)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            shift, and enter state 78
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'++'           shift, and enter state 125
	'-'            reduce using rule 38
	'--'           shift, and enter state 126
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            shift, and enter state 127
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 84

	Stmt -> Block .                                     (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'char'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'gen'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'next'         reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'yield'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_charac       reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 85

	Block -> '{' ListStmt . '}'                         (rule 15)

	'}'            shift, and enter state 124


State 86

	ListStmt -> Stmt . ListStmt                         (rule 17)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	';'            shift, and enter state 89
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'false'        shift, and enter state 49
	'for'          shift, and enter state 90
	'gen'          shift, and enter state 91
	'if'           shift, and enter state 92
	'int'          shift, and enter state 13
	'next'         shift, and enter state 50
	'return'       shift, and enter state 93
	'string'       shift, and enter state 14
	'true'         shift, and enter state 51
	'while'        shift, and enter state 94
	'yield'        shift, and enter state 95
	'{'            shift, and enter state 82
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 83
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Block          goto state 84
	ListStmt       goto state 123
	Stmt           goto state 86
	Type           goto state 87
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 88

State 87

	Stmt -> Type . Ident '=' Expr ';'                   (rule 20)

	L_Ident        shift, and enter state 2

	Ident          goto state 122

State 88

	Stmt -> Expr . ';'                                  (rule 31)

	';'            shift, and enter state 121


State 89

	Stmt -> ';' .                                       (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'bool'         reduce using rule 18
	'char'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'gen'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'next'         reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'yield'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_charac       reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 90

	Stmt -> 'for' . '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block    (rule 30)

	'('            shift, and enter state 120


State 91

	Stmt -> 'gen' . Ident '=' Ident '(' ListFunArg ')'    (rule 29)

	L_Ident        shift, and enter state 2

	Ident          goto state 119

State 92

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 24)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 25)

	'('            shift, and enter state 118


State 93

	Stmt -> 'return' . '(' Expr ')'                     (rule 27)

	'('            shift, and enter state 117


State 94

	Stmt -> 'while' . '(' Expr ')' Block                (rule 26)

	'('            shift, and enter state 116


State 95

	Stmt -> 'yield' . '(' Expr ')'                      (rule 28)

	'('            shift, and enter state 115


State 96

	TopDef -> 'Gen' Type Ident '(' ListArg ')' Block .    (rule 8)

	'Gen'          reduce using rule 8
	'Glob'         reduce using rule 8
	'Proc'         reduce using rule 8
	'bool'         reduce using rule 8
	'char'         reduce using rule 8
	'int'          reduce using rule 8
	'string'       reduce using rule 8
	%eof           reduce using rule 8


State 97

	ListFunArg -> FunArg .                              (rule 52)
	ListFunArg -> FunArg . ',' ListFunArg               (rule 53)

	')'            reduce using rule 52
	','            shift, and enter state 114


State 98

	Expr7 -> Ident '(' ListFunArg . ')'                 (rule 41)

	')'            shift, and enter state 113


State 99

	FunArg -> Expr .                                    (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49


State 100

	FunArg -> '&' . Var                                 (rule 50)

	L_Ident        shift, and enter state 2

	Ident          goto state 111
	Var            goto state 112

State 101

	Expr5 -> Expr5 MulOp Expr6 .                        (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59


State 102

	Expr5 -> Expr5 . MulOp Expr6                        (rule 59)
	Expr4 -> Expr4 AddOp Expr5 .                        (rule 61)

	'!='           reduce using rule 61
	'%'            shift, and enter state 75
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            shift, and enter state 76
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            shift, and enter state 77
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61

	MulOp          goto state 74

State 103

	Expr2 -> Expr3 '&&' Expr2 .                         (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65
	';'            reduce using rule 65
	'||'           reduce using rule 65


State 104

	Expr4 -> Expr4 . AddOp Expr5                        (rule 61)
	Expr3 -> Expr3 RelOp Expr4 .                        (rule 63)

	'!='           reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'+'            shift, and enter state 72
	','            reduce using rule 63
	'-'            shift, and enter state 73
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63

	AddOp          goto state 71

State 105

	Expr1 -> Expr2 '||' Expr1 .                         (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67


State 106

	Expr7 -> '(' Expr ')' .                             (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 107

	Expr6 -> '(' Type ')' . Expr6                       (rule 56)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 110

State 108

	Expr6 -> 'next' '(' Ident . ')'                     (rule 57)

	')'            shift, and enter state 109


State 109

	Expr6 -> 'next' '(' Ident ')' .                     (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57


State 110

	Expr6 -> '(' Type ')' Expr6 .                       (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56


State 111

	Var -> Ident .                                      (rule 38)

	')'            reduce using rule 38
	','            reduce using rule 38


State 112

	FunArg -> '&' Var .                                 (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50


State 113

	Expr7 -> Ident '(' ListFunArg ')' .                 (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 114

	ListFunArg -> FunArg ',' . ListFunArg               (rule 53)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 100
	'('            shift, and enter state 47
	')'            reduce using rule 51
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	FunArg         goto state 97
	ListFunArg     goto state 138
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 99

State 115

	Stmt -> 'yield' '(' . Expr ')'                      (rule 28)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 137

State 116

	Stmt -> 'while' '(' . Expr ')' Block                (rule 26)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 136

State 117

	Stmt -> 'return' '(' . Expr ')'                     (rule 27)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 135

State 118

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 24)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 25)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 134

State 119

	Stmt -> 'gen' Ident . '=' Ident '(' ListFunArg ')'    (rule 29)

	'='            shift, and enter state 133


State 120

	Stmt -> 'for' '(' . Ident 'in' Ident '(' ListFunArg ')' ')' Block    (rule 30)

	L_Ident        shift, and enter state 2

	Ident          goto state 132

State 121

	Stmt -> Expr ';' .                                  (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'bool'         reduce using rule 31
	'char'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'gen'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'next'         reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'while'        reduce using rule 31
	'yield'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_charac       reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 122

	Stmt -> Type Ident . '=' Expr ';'                   (rule 20)

	'='            shift, and enter state 131


State 123

	ListStmt -> Stmt ListStmt .                         (rule 17)

	'}'            reduce using rule 17


State 124

	Block -> '{' ListStmt '}' .                         (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'Gen'          reduce using rule 15
	'Glob'         reduce using rule 15
	'Proc'         reduce using rule 15
	'bool'         reduce using rule 15
	'char'         reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'gen'          reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'next'         reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'while'        reduce using rule 15
	'yield'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_charac       reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 125

	Stmt -> Ident '++' . ';'                            (rule 22)

	';'            shift, and enter state 130


State 126

	Stmt -> Ident '--' . ';'                            (rule 23)

	';'            shift, and enter state 129


State 127

	Stmt -> Ident '=' . Expr ';'                        (rule 21)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 128

State 128

	Stmt -> Ident '=' Expr . ';'                        (rule 21)

	';'            shift, and enter state 146


State 129

	Stmt -> Ident '--' ';' .                            (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'char'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'gen'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'next'         reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'yield'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_charac       reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 130

	Stmt -> Ident '++' ';' .                            (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'char'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'gen'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'next'         reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'yield'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_charac       reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 131

	Stmt -> Type Ident '=' . Expr ';'                   (rule 20)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 145

State 132

	Stmt -> 'for' '(' Ident . 'in' Ident '(' ListFunArg ')' ')' Block    (rule 30)

	'in'           shift, and enter state 144


State 133

	Stmt -> 'gen' Ident '=' . Ident '(' ListFunArg ')'    (rule 29)

	L_Ident        shift, and enter state 2

	Ident          goto state 143

State 134

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 24)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 25)

	')'            shift, and enter state 142


State 135

	Stmt -> 'return' '(' Expr . ')'                     (rule 27)

	')'            shift, and enter state 141


State 136

	Stmt -> 'while' '(' Expr . ')' Block                (rule 26)

	')'            shift, and enter state 140


State 137

	Stmt -> 'yield' '(' Expr . ')'                      (rule 28)

	')'            shift, and enter state 139


State 138

	ListFunArg -> FunArg ',' ListFunArg .               (rule 53)

	')'            reduce using rule 53


State 139

	Stmt -> 'yield' '(' Expr ')' .                      (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'bool'         reduce using rule 28
	'char'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'gen'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'next'         reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'yield'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_charac       reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 140

	Stmt -> 'while' '(' Expr ')' . Block                (rule 26)

	'{'            shift, and enter state 82

	Block          goto state 151

State 141

	Stmt -> 'return' '(' Expr ')' .                     (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'char'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'gen'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'next'         reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'yield'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_charac       reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 142

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 24)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 25)

	'{'            shift, and enter state 82

	Block          goto state 150

State 143

	Stmt -> 'gen' Ident '=' Ident . '(' ListFunArg ')'    (rule 29)

	'('            shift, and enter state 149


State 144

	Stmt -> 'for' '(' Ident 'in' . Ident '(' ListFunArg ')' ')' Block    (rule 30)

	L_Ident        shift, and enter state 2

	Ident          goto state 148

State 145

	Stmt -> Type Ident '=' Expr . ';'                   (rule 20)

	';'            shift, and enter state 147


State 146

	Stmt -> Ident '=' Expr ';' .                        (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'char'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'gen'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'next'         reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'yield'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_charac       reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 147

	Stmt -> Type Ident '=' Expr ';' .                   (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'char'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'gen'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'next'         reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'yield'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_charac       reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 148

	Stmt -> 'for' '(' Ident 'in' Ident . '(' ListFunArg ')' ')' Block    (rule 30)

	'('            shift, and enter state 154


State 149

	Stmt -> 'gen' Ident '=' Ident '(' . ListFunArg ')'    (rule 29)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 100
	'('            shift, and enter state 47
	')'            reduce using rule 51
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	FunArg         goto state 97
	ListFunArg     goto state 153
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 99

State 150

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 24)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 25)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'char'         reduce using rule 24
	'else'         shift, and enter state 152
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'gen'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'next'         reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'yield'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_charac       reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 151

	Stmt -> 'while' '(' Expr ')' Block .                (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'char'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'gen'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'next'         reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'yield'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_charac       reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 152

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 25)

	'{'            shift, and enter state 82

	Block          goto state 157

State 153

	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg . ')'    (rule 29)

	')'            shift, and enter state 156


State 154

	Stmt -> 'for' '(' Ident 'in' Ident '(' . ListFunArg ')' ')' Block    (rule 30)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 100
	'('            shift, and enter state 47
	')'            reduce using rule 51
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	FunArg         goto state 97
	ListFunArg     goto state 155
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 99

State 155

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg . ')' ')' Block    (rule 30)

	')'            shift, and enter state 158


State 156

	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg ')' .    (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'bool'         reduce using rule 29
	'char'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'gen'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'next'         reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'while'        reduce using rule 29
	'yield'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_charac       reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 157

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'char'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'gen'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'next'         reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'yield'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_charac       reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 158

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' . ')' Block    (rule 30)

	')'            shift, and enter state 159


State 159

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' . Block    (rule 30)

	'{'            shift, and enter state 82

	Block          goto state 160

State 160

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block .    (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'bool'         reduce using rule 30
	'char'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'gen'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'next'         reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'while'        reduce using rule 30
	'yield'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_charac       reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 84
Number of terminals: 46
Number of non-terminals: 32
Number of states: 161
