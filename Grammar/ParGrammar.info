-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGrammar.y
-----------------------------------------------------------------------------


rule 73 is unused
rule 74 is unused
rule 75 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	String -> L_quoted                                 (4)
	Program -> ListTopDef                              (5)
	TopDef -> RetVal Ident '(' ListArg ')' ';'         (6)
	TopDef -> RetVal Ident '(' ListArg ')' Block       (7)
	TopDef -> 'Glob' Type Ident '=' Expr ';'           (8)
	TopDef -> 'Gen' Type Ident '(' ListArg ')' Block   (9)
	ListTopDef ->                                      (10)
	ListTopDef -> TopDef ListTopDef                    (11)
	Arg -> Type Ident                                  (12)
	ListArg ->                                         (13)
	ListArg -> Arg                                     (14)
	ListArg -> Arg ',' ListArg                         (15)
	Block -> '{' ListStmt '}'                          (16)
	ListStmt ->                                        (17)
	ListStmt -> Stmt ListStmt                          (18)
	Stmt -> ';'                                        (19)
	Stmt -> Block                                      (20)
	Stmt -> Type Ident '=' Expr ';'                    (21)
	Stmt -> Ident '=' Expr ';'                         (22)
	Stmt -> Ident '++' ';'                             (23)
	Stmt -> Ident '--' ';'                             (24)
	Stmt -> 'break' ';'                                (25)
	Stmt -> 'continue' ';'                             (26)
	Stmt -> 'if' '(' Expr ')' Block                    (27)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (28)
	Stmt -> 'while' '(' Expr ')' Block                 (29)
	Stmt -> 'return' '(' Expr ')'                      (30)
	Stmt -> 'yield' '(' Expr ')'                       (31)
	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg ')'   (32)
	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block   (33)
	Stmt -> Expr ';'                                   (34)
	Type -> 'int'                                      (35)
	Type -> 'char'                                     (36)
	Type -> 'string'                                   (37)
	Type -> 'bool'                                     (38)
	RetVal -> Type                                     (39)
	RetVal -> 'Proc'                                   (40)
	Var -> Ident                                       (41)
	Expr7 -> Var                                       (42)
	Expr7 -> ELit                                      (43)
	Expr7 -> Ident '(' ListFunArg ')'                  (44)
	Expr7 -> '(' Expr ')'                              (45)
	ELit -> Integer                                    (46)
	ELit -> EBool                                      (47)
	ELit -> String                                     (48)
	ELit -> Char                                       (49)
	EBool -> 'true'                                    (50)
	EBool -> 'false'                                   (51)
	FunArg -> Expr                                     (52)
	FunArg -> '&' Var                                  (53)
	ListFunArg ->                                      (54)
	ListFunArg -> FunArg                               (55)
	ListFunArg -> FunArg ',' ListFunArg                (56)
	Expr6 -> '-' Expr7                                 (57)
	Expr6 -> '!' Expr7                                 (58)
	Expr6 -> '(' Type ')' Expr6                        (59)
	Expr6 -> 'next' '(' Ident ')'                      (60)
	Expr6 -> Expr7                                     (61)
	Expr5 -> Expr5 MulOp Expr6                         (62)
	Expr5 -> Expr6                                     (63)
	Expr4 -> Expr4 AddOp Expr5                         (64)
	Expr4 -> Expr5                                     (65)
	Expr3 -> Expr3 RelOp Expr4                         (66)
	Expr3 -> Expr4                                     (67)
	Expr2 -> Expr3 '&&' Expr2                          (68)
	Expr2 -> Expr3                                     (69)
	Expr1 -> Expr2 '||' Expr1                          (70)
	Expr1 -> Expr2                                     (71)
	Expr -> Expr1                                      (72)
	ListExpr ->                                        (73)
	ListExpr -> Expr                                   (74)
	ListExpr -> Expr ',' ListExpr                      (75)
	AddOp -> '+'                                       (76)
	AddOp -> '-'                                       (77)
	MulOp -> '*'                                       (78)
	MulOp -> '/'                                       (79)
	MulOp -> '%'                                       (80)
	RelOp -> '<'                                       (81)
	RelOp -> '<='                                      (82)
	RelOp -> '>'                                       (83)
	RelOp -> '>='                                      (84)
	RelOp -> '=='                                      (85)
	RelOp -> '!='                                      (86)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'Gen'          { PT _ (TS _ 22) }
	'Glob'         { PT _ (TS _ 23) }
	'Proc'         { PT _ (TS _ 24) }
	'bool'         { PT _ (TS _ 25) }
	'break'        { PT _ (TS _ 26) }
	'char'         { PT _ (TS _ 27) }
	'continue'     { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'for'          { PT _ (TS _ 31) }
	'gen'          { PT _ (TS _ 32) }
	'if'           { PT _ (TS _ 33) }
	'in'           { PT _ (TS _ 34) }
	'int'          { PT _ (TS _ 35) }
	'next'         { PT _ (TS _ 36) }
	'return'       { PT _ (TS _ 37) }
	'string'       { PT _ (TS _ 38) }
	'true'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'yield'        { PT _ (TS _ 41) }
	'{'            { PT _ (TS _ 42) }
	'||'           { PT _ (TS _ 43) }
	'}'            { PT _ (TS _ 44) }
	L_Ident        { PT _ (TV _) }
	L_charac       { PT _ (TC _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	String          rule  4
	Program         rule  5
	TopDef          rules 6, 7, 8, 9
	ListTopDef      rules 10, 11
	Arg             rule  12
	ListArg         rules 13, 14, 15
	Block           rule  16
	ListStmt        rules 17, 18
	Stmt            rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34
	Type            rules 35, 36, 37, 38
	RetVal          rules 39, 40
	Var             rule  41
	Expr7           rules 42, 43, 44, 45
	ELit            rules 46, 47, 48, 49
	EBool           rules 50, 51
	FunArg          rules 52, 53
	ListFunArg      rules 54, 55, 56
	Expr6           rules 57, 58, 59, 60, 61
	Expr5           rules 62, 63
	Expr4           rules 64, 65
	Expr3           rules 66, 67
	Expr2           rules 68, 69
	Expr1           rules 70, 71
	Expr            rule  72
	ListExpr        rules 73, 74, 75
	AddOp           rules 76, 77
	MulOp           rules 78, 79, 80
	RelOp           rules 81, 82, 83, 84, 85, 86

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'Gen'          shift, and enter state 8
	'Glob'         shift, and enter state 9
	'Proc'         shift, and enter state 10
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14
	%eof           reduce using rule 10

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6
	RetVal         goto state 7

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'in'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef . ListTopDef                   (rule 11)

	'Gen'          shift, and enter state 8
	'Glob'         shift, and enter state 9
	'Proc'         shift, and enter state 10
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14
	%eof           reduce using rule 10

	TopDef         goto state 4
	ListTopDef     goto state 18
	Type           goto state 6
	RetVal         goto state 7

State 5

	Program -> ListTopDef .                             (rule 5)

	%eof           reduce using rule 5


State 6

	RetVal -> Type .                                    (rule 39)

	L_Ident        reduce using rule 39


State 7

	TopDef -> RetVal . Ident '(' ListArg ')' ';'        (rule 6)
	TopDef -> RetVal . Ident '(' ListArg ')' Block      (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 8

	TopDef -> 'Gen' . Type Ident '(' ListArg ')' Block    (rule 9)

	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Type           goto state 16

State 9

	TopDef -> 'Glob' . Type Ident '=' Expr ';'          (rule 8)

	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Type           goto state 15

State 10

	RetVal -> 'Proc' .                                  (rule 40)

	L_Ident        reduce using rule 40


State 11

	Type -> 'bool' .                                    (rule 38)

	')'            reduce using rule 38
	L_Ident        reduce using rule 38


State 12

	Type -> 'char' .                                    (rule 36)

	')'            reduce using rule 36
	L_Ident        reduce using rule 36


State 13

	Type -> 'int' .                                     (rule 35)

	')'            reduce using rule 35
	L_Ident        reduce using rule 35


State 14

	Type -> 'string' .                                  (rule 37)

	')'            reduce using rule 37
	L_Ident        reduce using rule 37


State 15

	TopDef -> 'Glob' Type . Ident '=' Expr ';'          (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 21

State 16

	TopDef -> 'Gen' Type . Ident '(' ListArg ')' Block    (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 20

State 17

	TopDef -> RetVal Ident . '(' ListArg ')' ';'        (rule 6)
	TopDef -> RetVal Ident . '(' ListArg ')' Block      (rule 7)

	'('            shift, and enter state 19


State 18

	ListTopDef -> TopDef ListTopDef .                   (rule 11)

	%eof           reduce using rule 11


State 19

	TopDef -> RetVal Ident '(' . ListArg ')' ';'        (rule 6)
	TopDef -> RetVal Ident '(' . ListArg ')' Block      (rule 7)

	')'            reduce using rule 13
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Arg            goto state 24
	ListArg        goto state 25
	Type           goto state 26

State 20

	TopDef -> 'Gen' Type Ident . '(' ListArg ')' Block    (rule 9)

	'('            shift, and enter state 23


State 21

	TopDef -> 'Glob' Type Ident . '=' Expr ';'          (rule 8)

	'='            shift, and enter state 22


State 22

	TopDef -> 'Glob' Type Ident '=' . Expr ';'          (rule 8)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 45

State 23

	TopDef -> 'Gen' Type Ident '(' . ListArg ')' Block    (rule 9)

	')'            reduce using rule 13
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Arg            goto state 24
	ListArg        goto state 30
	Type           goto state 26

State 24

	ListArg -> Arg .                                    (rule 14)
	ListArg -> Arg . ',' ListArg                        (rule 15)

	')'            reduce using rule 14
	','            shift, and enter state 29


State 25

	TopDef -> RetVal Ident '(' ListArg . ')' ';'        (rule 6)
	TopDef -> RetVal Ident '(' ListArg . ')' Block      (rule 7)

	')'            shift, and enter state 28


State 26

	Arg -> Type . Ident                                 (rule 12)

	L_Ident        shift, and enter state 2

	Ident          goto state 27

State 27

	Arg -> Type Ident .                                 (rule 12)

	')'            reduce using rule 12
	','            reduce using rule 12


State 28

	TopDef -> RetVal Ident '(' ListArg ')' . ';'        (rule 6)
	TopDef -> RetVal Ident '(' ListArg ')' . Block      (rule 7)

	';'            shift, and enter state 82
	'{'            shift, and enter state 83

	Block          goto state 81

State 29

	ListArg -> Arg ',' . ListArg                        (rule 15)

	')'            reduce using rule 13
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'int'          shift, and enter state 13
	'string'       shift, and enter state 14

	Arg            goto state 24
	ListArg        goto state 80
	Type           goto state 26

State 30

	TopDef -> 'Gen' Type Ident '(' ListArg . ')' Block    (rule 9)

	')'            shift, and enter state 79


State 31

	Var -> Ident .                                      (rule 41)
	Expr7 -> Ident . '(' ListFunArg ')'                 (rule 44)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	'('            shift, and enter state 78
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 32

	ELit -> Char .                                      (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 33

	ELit -> Integer .                                   (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 34

	ELit -> String .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 35

	Expr7 -> Var .                                      (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 36

	Expr6 -> Expr7 .                                    (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61


State 37

	Expr7 -> ELit .                                     (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 38

	ELit -> EBool .                                     (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 39

	Expr5 -> Expr6 .                                    (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63


State 40

	Expr5 -> Expr5 . MulOp Expr6                        (rule 62)
	Expr4 -> Expr5 .                                    (rule 65)

	'!='           reduce using rule 65
	'%'            shift, and enter state 75
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 76
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            shift, and enter state 77
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'||'           reduce using rule 65

	MulOp          goto state 74

State 41

	Expr4 -> Expr4 . AddOp Expr5                        (rule 64)
	Expr3 -> Expr4 .                                    (rule 67)

	'!='           reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'+'            shift, and enter state 72
	','            reduce using rule 67
	'-'            shift, and enter state 73
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'||'           reduce using rule 67

	AddOp          goto state 71

State 42

	Expr3 -> Expr3 . RelOp Expr4                        (rule 66)
	Expr2 -> Expr3 . '&&' Expr2                         (rule 68)
	Expr2 -> Expr3 .                                    (rule 69)

	'!='           shift, and enter state 64
	'&&'           shift, and enter state 65
	')'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'=='           shift, and enter state 68
	'>'            shift, and enter state 69
	'>='           shift, and enter state 70
	'||'           reduce using rule 69

	RelOp          goto state 63

State 43

	Expr1 -> Expr2 . '||' Expr1                         (rule 70)
	Expr1 -> Expr2 .                                    (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71
	'||'           shift, and enter state 62


State 44

	Expr -> Expr1 .                                     (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72


State 45

	TopDef -> 'Glob' Type Ident '=' Expr . ';'          (rule 8)

	';'            shift, and enter state 61


State 46

	Expr6 -> '!' . Expr7                                (rule 58)

	'('            shift, and enter state 57
	'false'        shift, and enter state 49
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 60
	ELit           goto state 37
	EBool          goto state 38

State 47

	Expr7 -> '(' . Expr ')'                             (rule 45)
	Expr6 -> '(' . Type ')' Expr6                       (rule 59)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'bool'         shift, and enter state 11
	'char'         shift, and enter state 12
	'false'        shift, and enter state 49
	'int'          shift, and enter state 13
	'next'         shift, and enter state 50
	'string'       shift, and enter state 14
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Type           goto state 58
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 59

State 48

	Expr6 -> '-' . Expr7                                (rule 57)

	'('            shift, and enter state 57
	'false'        shift, and enter state 49
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 56
	ELit           goto state 37
	EBool          goto state 38

State 49

	EBool -> 'false' .                                  (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 50

	Expr6 -> 'next' . '(' Ident ')'                     (rule 60)

	'('            shift, and enter state 55


State 51

	EBool -> 'true' .                                   (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 52

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 53

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 54

	String -> L_quoted .                                (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'||'           reduce using rule 4


State 55

	Expr6 -> 'next' '(' . Ident ')'                     (rule 60)

	L_Ident        shift, and enter state 2

	Ident          goto state 111

State 56

	Expr6 -> '-' Expr7 .                                (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57


State 57

	Expr7 -> '(' . Expr ')'                             (rule 45)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 59

State 58

	Expr6 -> '(' Type . ')' Expr6                       (rule 59)

	')'            shift, and enter state 110


State 59

	Expr7 -> '(' Expr . ')'                             (rule 45)

	')'            shift, and enter state 109


State 60

	Expr6 -> '!' Expr7 .                                (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58


State 61

	TopDef -> 'Glob' Type Ident '=' Expr ';' .          (rule 8)

	'Gen'          reduce using rule 8
	'Glob'         reduce using rule 8
	'Proc'         reduce using rule 8
	'bool'         reduce using rule 8
	'char'         reduce using rule 8
	'int'          reduce using rule 8
	'string'       reduce using rule 8
	%eof           reduce using rule 8


State 62

	Expr1 -> Expr2 '||' . Expr1                         (rule 70)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 108

State 63

	Expr3 -> Expr3 RelOp . Expr4                        (rule 66)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 107

State 64

	RelOp -> '!=' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'next'         reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_charac       reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 65

	Expr2 -> Expr3 '&&' . Expr2                         (rule 68)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 106

State 66

	RelOp -> '<' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'next'         reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_charac       reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 67

	RelOp -> '<=' .                                     (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'next'         reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_charac       reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 68

	RelOp -> '==' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'next'         reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_charac       reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 69

	RelOp -> '>' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'next'         reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_charac       reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 70

	RelOp -> '>=' .                                     (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'next'         reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_charac       reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 71

	Expr4 -> Expr4 AddOp . Expr5                        (rule 64)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 105

State 72

	AddOp -> '+' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'next'         reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_charac       reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 73

	AddOp -> '-' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'next'         reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_charac       reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 74

	Expr5 -> Expr5 MulOp . Expr6                        (rule 62)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 104

State 75

	MulOp -> '%' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'next'         reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_charac       reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 76

	MulOp -> '*' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'next'         reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_charac       reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 77

	MulOp -> '/' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'next'         reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_charac       reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 78

	Expr7 -> Ident '(' . ListFunArg ')'                 (rule 44)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 103
	'('            shift, and enter state 47
	')'            reduce using rule 54
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	FunArg         goto state 100
	ListFunArg     goto state 101
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 102

State 79

	TopDef -> 'Gen' Type Ident '(' ListArg ')' . Block    (rule 9)

	'{'            shift, and enter state 83

	Block          goto state 99

State 80

	ListArg -> Arg ',' ListArg .                        (rule 15)

	')'            reduce using rule 15


State 81

	TopDef -> RetVal Ident '(' ListArg ')' Block .      (rule 7)

	'Gen'          reduce using rule 7
	'Glob'         reduce using rule 7
	'Proc'         reduce using rule 7
	'bool'         reduce using rule 7
	'char'         reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	%eof           reduce using rule 7


State 82

	TopDef -> RetVal Ident '(' ListArg ')' ';' .        (rule 6)

	'Gen'          reduce using rule 6
	'Glob'         reduce using rule 6
	'Proc'         reduce using rule 6
	'bool'         reduce using rule 6
	'char'         reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	%eof           reduce using rule 6


State 83

	Block -> '{' . ListStmt '}'                         (rule 16)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	';'            shift, and enter state 90
	'bool'         shift, and enter state 11
	'break'        shift, and enter state 91
	'char'         shift, and enter state 12
	'continue'     shift, and enter state 92
	'false'        shift, and enter state 49
	'for'          shift, and enter state 93
	'gen'          shift, and enter state 94
	'if'           shift, and enter state 95
	'int'          shift, and enter state 13
	'next'         shift, and enter state 50
	'return'       shift, and enter state 96
	'string'       shift, and enter state 14
	'true'         shift, and enter state 51
	'while'        shift, and enter state 97
	'yield'        shift, and enter state 98
	'{'            shift, and enter state 83
	'}'            reduce using rule 17
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 84
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Block          goto state 85
	ListStmt       goto state 86
	Stmt           goto state 87
	Type           goto state 88
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 89

State 84

	Stmt -> Ident . '=' Expr ';'                        (rule 22)
	Stmt -> Ident . '++' ';'                            (rule 23)
	Stmt -> Ident . '--' ';'                            (rule 24)
	Var -> Ident .                                      (rule 41)
	Expr7 -> Ident . '(' ListFunArg ')'                 (rule 44)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	'('            shift, and enter state 78
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	'++'           shift, and enter state 130
	'-'            reduce using rule 41
	'--'           shift, and enter state 131
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            shift, and enter state 132
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 85

	Stmt -> Block .                                     (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'char'         reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'gen'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'next'         reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'yield'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_charac       reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 86

	Block -> '{' ListStmt . '}'                         (rule 16)

	'}'            shift, and enter state 129


State 87

	ListStmt -> Stmt . ListStmt                         (rule 18)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	';'            shift, and enter state 90
	'bool'         shift, and enter state 11
	'break'        shift, and enter state 91
	'char'         shift, and enter state 12
	'continue'     shift, and enter state 92
	'false'        shift, and enter state 49
	'for'          shift, and enter state 93
	'gen'          shift, and enter state 94
	'if'           shift, and enter state 95
	'int'          shift, and enter state 13
	'next'         shift, and enter state 50
	'return'       shift, and enter state 96
	'string'       shift, and enter state 14
	'true'         shift, and enter state 51
	'while'        shift, and enter state 97
	'yield'        shift, and enter state 98
	'{'            shift, and enter state 83
	'}'            reduce using rule 17
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 84
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Block          goto state 85
	ListStmt       goto state 128
	Stmt           goto state 87
	Type           goto state 88
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 89

State 88

	Stmt -> Type . Ident '=' Expr ';'                   (rule 21)

	L_Ident        shift, and enter state 2

	Ident          goto state 127

State 89

	Stmt -> Expr . ';'                                  (rule 34)

	';'            shift, and enter state 126


State 90

	Stmt -> ';' .                                       (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'break'        reduce using rule 19
	'char'         reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'gen'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'next'         reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'yield'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_charac       reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 91

	Stmt -> 'break' . ';'                               (rule 25)

	';'            shift, and enter state 125


State 92

	Stmt -> 'continue' . ';'                            (rule 26)

	';'            shift, and enter state 124


State 93

	Stmt -> 'for' . '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block    (rule 33)

	'('            shift, and enter state 123


State 94

	Stmt -> 'gen' . Ident '=' Ident '(' ListFunArg ')'    (rule 32)

	L_Ident        shift, and enter state 2

	Ident          goto state 122

State 95

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 27)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 28)

	'('            shift, and enter state 121


State 96

	Stmt -> 'return' . '(' Expr ')'                     (rule 30)

	'('            shift, and enter state 120


State 97

	Stmt -> 'while' . '(' Expr ')' Block                (rule 29)

	'('            shift, and enter state 119


State 98

	Stmt -> 'yield' . '(' Expr ')'                      (rule 31)

	'('            shift, and enter state 118


State 99

	TopDef -> 'Gen' Type Ident '(' ListArg ')' Block .    (rule 9)

	'Gen'          reduce using rule 9
	'Glob'         reduce using rule 9
	'Proc'         reduce using rule 9
	'bool'         reduce using rule 9
	'char'         reduce using rule 9
	'int'          reduce using rule 9
	'string'       reduce using rule 9
	%eof           reduce using rule 9


State 100

	ListFunArg -> FunArg .                              (rule 55)
	ListFunArg -> FunArg . ',' ListFunArg               (rule 56)

	')'            reduce using rule 55
	','            shift, and enter state 117


State 101

	Expr7 -> Ident '(' ListFunArg . ')'                 (rule 44)

	')'            shift, and enter state 116


State 102

	FunArg -> Expr .                                    (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52


State 103

	FunArg -> '&' . Var                                 (rule 53)

	L_Ident        shift, and enter state 2

	Ident          goto state 114
	Var            goto state 115

State 104

	Expr5 -> Expr5 MulOp Expr6 .                        (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62


State 105

	Expr5 -> Expr5 . MulOp Expr6                        (rule 62)
	Expr4 -> Expr4 AddOp Expr5 .                        (rule 64)

	'!='           reduce using rule 64
	'%'            shift, and enter state 75
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            shift, and enter state 76
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            shift, and enter state 77
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64

	MulOp          goto state 74

State 106

	Expr2 -> Expr3 '&&' Expr2 .                         (rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68
	'||'           reduce using rule 68


State 107

	Expr4 -> Expr4 . AddOp Expr5                        (rule 64)
	Expr3 -> Expr3 RelOp Expr4 .                        (rule 66)

	'!='           reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'+'            shift, and enter state 72
	','            reduce using rule 66
	'-'            shift, and enter state 73
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'||'           reduce using rule 66

	AddOp          goto state 71

State 108

	Expr1 -> Expr2 '||' Expr1 .                         (rule 70)

	')'            reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70


State 109

	Expr7 -> '(' Expr ')' .                             (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 110

	Expr6 -> '(' Type ')' . Expr6                       (rule 59)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 113

State 111

	Expr6 -> 'next' '(' Ident . ')'                     (rule 60)

	')'            shift, and enter state 112


State 112

	Expr6 -> 'next' '(' Ident ')' .                     (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60


State 113

	Expr6 -> '(' Type ')' Expr6 .                       (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59


State 114

	Var -> Ident .                                      (rule 41)

	')'            reduce using rule 41
	','            reduce using rule 41


State 115

	FunArg -> '&' Var .                                 (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53


State 116

	Expr7 -> Ident '(' ListFunArg ')' .                 (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 117

	ListFunArg -> FunArg ',' . ListFunArg               (rule 56)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 103
	'('            shift, and enter state 47
	')'            reduce using rule 54
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	FunArg         goto state 100
	ListFunArg     goto state 143
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 102

State 118

	Stmt -> 'yield' '(' . Expr ')'                      (rule 31)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 142

State 119

	Stmt -> 'while' '(' . Expr ')' Block                (rule 29)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 141

State 120

	Stmt -> 'return' '(' . Expr ')'                     (rule 30)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 140

State 121

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 27)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 28)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 139

State 122

	Stmt -> 'gen' Ident . '=' Ident '(' ListFunArg ')'    (rule 32)

	'='            shift, and enter state 138


State 123

	Stmt -> 'for' '(' . Ident 'in' Ident '(' ListFunArg ')' ')' Block    (rule 33)

	L_Ident        shift, and enter state 2

	Ident          goto state 137

State 124

	Stmt -> 'continue' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'char'         reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'gen'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'next'         reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'yield'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_charac       reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 125

	Stmt -> 'break' ';' .                               (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'char'         reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'gen'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'next'         reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'yield'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_charac       reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 126

	Stmt -> Expr ';' .                                  (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'bool'         reduce using rule 34
	'break'        reduce using rule 34
	'char'         reduce using rule 34
	'continue'     reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'gen'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'next'         reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'while'        reduce using rule 34
	'yield'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_charac       reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 127

	Stmt -> Type Ident . '=' Expr ';'                   (rule 21)

	'='            shift, and enter state 136


State 128

	ListStmt -> Stmt ListStmt .                         (rule 18)

	'}'            reduce using rule 18


State 129

	Block -> '{' ListStmt '}' .                         (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'Gen'          reduce using rule 16
	'Glob'         reduce using rule 16
	'Proc'         reduce using rule 16
	'bool'         reduce using rule 16
	'break'        reduce using rule 16
	'char'         reduce using rule 16
	'continue'     reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'gen'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'next'         reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'while'        reduce using rule 16
	'yield'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_charac       reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 130

	Stmt -> Ident '++' . ';'                            (rule 23)

	';'            shift, and enter state 135


State 131

	Stmt -> Ident '--' . ';'                            (rule 24)

	';'            shift, and enter state 134


State 132

	Stmt -> Ident '=' . Expr ';'                        (rule 22)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 133

State 133

	Stmt -> Ident '=' Expr . ';'                        (rule 22)

	';'            shift, and enter state 151


State 134

	Stmt -> Ident '--' ';' .                            (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'char'         reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'gen'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'next'         reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'yield'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_charac       reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 135

	Stmt -> Ident '++' ';' .                            (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'char'         reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'gen'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'next'         reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'yield'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_charac       reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 136

	Stmt -> Type Ident '=' . Expr ';'                   (rule 21)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 150

State 137

	Stmt -> 'for' '(' Ident . 'in' Ident '(' ListFunArg ')' ')' Block    (rule 33)

	'in'           shift, and enter state 149


State 138

	Stmt -> 'gen' Ident '=' . Ident '(' ListFunArg ')'    (rule 32)

	L_Ident        shift, and enter state 2

	Ident          goto state 148

State 139

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 27)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 28)

	')'            shift, and enter state 147


State 140

	Stmt -> 'return' '(' Expr . ')'                     (rule 30)

	')'            shift, and enter state 146


State 141

	Stmt -> 'while' '(' Expr . ')' Block                (rule 29)

	')'            shift, and enter state 145


State 142

	Stmt -> 'yield' '(' Expr . ')'                      (rule 31)

	')'            shift, and enter state 144


State 143

	ListFunArg -> FunArg ',' ListFunArg .               (rule 56)

	')'            reduce using rule 56


State 144

	Stmt -> 'yield' '(' Expr ')' .                      (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'bool'         reduce using rule 31
	'break'        reduce using rule 31
	'char'         reduce using rule 31
	'continue'     reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'gen'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'next'         reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'while'        reduce using rule 31
	'yield'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_charac       reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 145

	Stmt -> 'while' '(' Expr ')' . Block                (rule 29)

	'{'            shift, and enter state 83

	Block          goto state 156

State 146

	Stmt -> 'return' '(' Expr ')' .                     (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'char'         reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'gen'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'next'         reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'while'        reduce using rule 30
	'yield'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_charac       reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 147

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 27)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 28)

	'{'            shift, and enter state 83

	Block          goto state 155

State 148

	Stmt -> 'gen' Ident '=' Ident . '(' ListFunArg ')'    (rule 32)

	'('            shift, and enter state 154


State 149

	Stmt -> 'for' '(' Ident 'in' . Ident '(' ListFunArg ')' ')' Block    (rule 33)

	L_Ident        shift, and enter state 2

	Ident          goto state 153

State 150

	Stmt -> Type Ident '=' Expr . ';'                   (rule 21)

	';'            shift, and enter state 152


State 151

	Stmt -> Ident '=' Expr ';' .                        (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'char'         reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'gen'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'next'         reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'yield'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_charac       reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 152

	Stmt -> Type Ident '=' Expr ';' .                   (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'char'         reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'gen'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'next'         reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'yield'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_charac       reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 153

	Stmt -> 'for' '(' Ident 'in' Ident . '(' ListFunArg ')' ')' Block    (rule 33)

	'('            shift, and enter state 159


State 154

	Stmt -> 'gen' Ident '=' Ident '(' . ListFunArg ')'    (rule 32)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 103
	'('            shift, and enter state 47
	')'            reduce using rule 54
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	FunArg         goto state 100
	ListFunArg     goto state 158
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 102

State 155

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 27)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 28)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'char'         reduce using rule 27
	'continue'     reduce using rule 27
	'else'         shift, and enter state 157
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'gen'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'next'         reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'yield'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_charac       reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 156

	Stmt -> 'while' '(' Expr ')' Block .                (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'char'         reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'gen'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'next'         reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'while'        reduce using rule 29
	'yield'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_charac       reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 157

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 28)

	'{'            shift, and enter state 83

	Block          goto state 162

State 158

	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg . ')'    (rule 32)

	')'            shift, and enter state 161


State 159

	Stmt -> 'for' '(' Ident 'in' Ident '(' . ListFunArg ')' ')' Block    (rule 33)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 103
	'('            shift, and enter state 47
	')'            reduce using rule 54
	'-'            shift, and enter state 48
	'false'        shift, and enter state 49
	'next'         shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 31
	Char           goto state 32
	Integer        goto state 33
	String         goto state 34
	Var            goto state 35
	Expr7          goto state 36
	ELit           goto state 37
	EBool          goto state 38
	FunArg         goto state 100
	ListFunArg     goto state 160
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 102

State 160

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg . ')' ')' Block    (rule 33)

	')'            shift, and enter state 163


State 161

	Stmt -> 'gen' Ident '=' Ident '(' ListFunArg ')' .    (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'bool'         reduce using rule 32
	'break'        reduce using rule 32
	'char'         reduce using rule 32
	'continue'     reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'gen'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'next'         reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'while'        reduce using rule 32
	'yield'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_charac       reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 162

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'char'         reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'gen'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'next'         reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'yield'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_charac       reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 163

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' . ')' Block    (rule 33)

	')'            shift, and enter state 164


State 164

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' . Block    (rule 33)

	'{'            shift, and enter state 83

	Block          goto state 165

State 165

	Stmt -> 'for' '(' Ident 'in' Ident '(' ListFunArg ')' ')' Block .    (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'bool'         reduce using rule 33
	'break'        reduce using rule 33
	'char'         reduce using rule 33
	'continue'     reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'gen'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'next'         reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'while'        reduce using rule 33
	'yield'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_charac       reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 87
Number of terminals: 48
Number of non-terminals: 32
Number of states: 166
